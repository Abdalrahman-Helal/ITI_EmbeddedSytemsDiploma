
ITI_Day14.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c42  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  00000c42  00000cb6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000010c8  00000000  00000000  00000cb8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000f57  00000000  00000000  00001d80  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__vector_1>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e4       	ldi	r30, 0x42	; 66
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 1f 06 	jmp	0xc3e	; 0xc3e <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#define F_CPU 8000000UL

void ToggleLED(void);

void main(void)
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
	MDIO_vSetPinDir(DIO_PORTA , PIN0 , DIO_OUTPUT);
  8a:	80 e0       	ldi	r24, 0x00	; 0
  8c:	60 e0       	ldi	r22, 0x00	; 0
  8e:	41 e0       	ldi	r20, 0x01	; 1
  90:	0e 94 29 02 	call	0x452	; 0x452 <MDIO_vSetPinDir>
	MDIO_vSetPinVal(DIO_PORTA , PIN0 , DIO_HIGH);
  94:	80 e0       	ldi	r24, 0x00	; 0
  96:	60 e0       	ldi	r22, 0x00	; 0
  98:	41 e0       	ldi	r20, 0x01	; 1
  9a:	0e 94 4c 03 	call	0x698	; 0x698 <MDIO_vSetPinVal>

	// Pin Config
	MDIO_vSetPinDir(DIO_PORTD , PIN2 , DIO_INPUT);
  9e:	83 e0       	ldi	r24, 0x03	; 3
  a0:	62 e0       	ldi	r22, 0x02	; 2
  a2:	40 e0       	ldi	r20, 0x00	; 0
  a4:	0e 94 29 02 	call	0x452	; 0x452 <MDIO_vSetPinDir>
	MDIO_vSetPinVal(DIO_PORTD , PIN2 , DIO_HIGH);
  a8:	83 e0       	ldi	r24, 0x03	; 3
  aa:	62 e0       	ldi	r22, 0x02	; 2
  ac:	41 e0       	ldi	r20, 0x01	; 1
  ae:	0e 94 4c 03 	call	0x698	; 0x698 <MDIO_vSetPinVal>

	// Pin INT Config
	EXTI_SetSenstivity(EXTI_INT_0 , EXTI_FAILLING_EDGE );
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	62 e0       	ldi	r22, 0x02	; 2
  b6:	0e 94 29 01 	call	0x252	; 0x252 <EXTI_SetSenstivity>

	EXTI_EnableDisable(EXTI_INT_0 , EXTI_ENABLE);
  ba:	80 e0       	ldi	r24, 0x00	; 0
  bc:	61 e0       	ldi	r22, 0x01	; 1
  be:	0e 94 c5 00 	call	0x18a	; 0x18a <EXTI_EnableDisable>
	GIE_Enable();
  c2:	0e 94 a9 00 	call	0x152	; 0x152 <GIE_Enable>
  c6:	ff cf       	rjmp	.-2      	; 0xc6 <main+0x44>

000000c8 <__vector_1>:
	}
}

void __vector_1(void)  __attribute__((signal));
void __vector_1(void)
{
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	2f 93       	push	r18
  d4:	3f 93       	push	r19
  d6:	4f 93       	push	r20
  d8:	5f 93       	push	r21
  da:	6f 93       	push	r22
  dc:	7f 93       	push	r23
  de:	8f 93       	push	r24
  e0:	9f 93       	push	r25
  e2:	af 93       	push	r26
  e4:	bf 93       	push	r27
  e6:	ef 93       	push	r30
  e8:	ff 93       	push	r31
  ea:	df 93       	push	r29
  ec:	cf 93       	push	r28
  ee:	cd b7       	in	r28, 0x3d	; 61
  f0:	de b7       	in	r29, 0x3e	; 62
	ToggleLED();
  f2:	0e 94 8e 00 	call	0x11c	; 0x11c <ToggleLED>
}
  f6:	cf 91       	pop	r28
  f8:	df 91       	pop	r29
  fa:	ff 91       	pop	r31
  fc:	ef 91       	pop	r30
  fe:	bf 91       	pop	r27
 100:	af 91       	pop	r26
 102:	9f 91       	pop	r25
 104:	8f 91       	pop	r24
 106:	7f 91       	pop	r23
 108:	6f 91       	pop	r22
 10a:	5f 91       	pop	r21
 10c:	4f 91       	pop	r20
 10e:	3f 91       	pop	r19
 110:	2f 91       	pop	r18
 112:	0f 90       	pop	r0
 114:	0f be       	out	0x3f, r0	; 63
 116:	0f 90       	pop	r0
 118:	1f 90       	pop	r1
 11a:	18 95       	reti

0000011c <ToggleLED>:

void ToggleLED(void)
{
 11c:	df 93       	push	r29
 11e:	cf 93       	push	r28
 120:	cd b7       	in	r28, 0x3d	; 61
 122:	de b7       	in	r29, 0x3e	; 62
	static u8 flag=1;
	if(flag == 1 )
 124:	80 91 60 00 	lds	r24, 0x0060
 128:	81 30       	cpi	r24, 0x01	; 1
 12a:	41 f4       	brne	.+16     	; 0x13c <ToggleLED+0x20>
	{
		MDIO_vSetPinVal(DIO_PORTA , PIN0 , DIO_LOW);
 12c:	80 e0       	ldi	r24, 0x00	; 0
 12e:	60 e0       	ldi	r22, 0x00	; 0
 130:	40 e0       	ldi	r20, 0x00	; 0
 132:	0e 94 4c 03 	call	0x698	; 0x698 <MDIO_vSetPinVal>
		flag = 0;
 136:	10 92 60 00 	sts	0x0060, r1
 13a:	08 c0       	rjmp	.+16     	; 0x14c <ToggleLED+0x30>
	}
	else
	{
		MDIO_vSetPinVal(DIO_PORTA , PIN0 , DIO_HIGH);
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	60 e0       	ldi	r22, 0x00	; 0
 140:	41 e0       	ldi	r20, 0x01	; 1
 142:	0e 94 4c 03 	call	0x698	; 0x698 <MDIO_vSetPinVal>
		flag =1;
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	80 93 60 00 	sts	0x0060, r24
	}
}
 14c:	cf 91       	pop	r28
 14e:	df 91       	pop	r29
 150:	08 95       	ret

00000152 <GIE_Enable>:
#include "GIE_Private.h"
#include "GIE_Cfg.h"


void GIE_Enable(void)
{
 152:	df 93       	push	r29
 154:	cf 93       	push	r28
 156:	cd b7       	in	r28, 0x3d	; 61
 158:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG , SREG_I);
 15a:	af e5       	ldi	r26, 0x5F	; 95
 15c:	b0 e0       	ldi	r27, 0x00	; 0
 15e:	ef e5       	ldi	r30, 0x5F	; 95
 160:	f0 e0       	ldi	r31, 0x00	; 0
 162:	80 81       	ld	r24, Z
 164:	80 68       	ori	r24, 0x80	; 128
 166:	8c 93       	st	X, r24
}
 168:	cf 91       	pop	r28
 16a:	df 91       	pop	r29
 16c:	08 95       	ret

0000016e <GIE_Disable>:
void GIE_Disable(void)
{
 16e:	df 93       	push	r29
 170:	cf 93       	push	r28
 172:	cd b7       	in	r28, 0x3d	; 61
 174:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SREG , SREG_I);
 176:	af e5       	ldi	r26, 0x5F	; 95
 178:	b0 e0       	ldi	r27, 0x00	; 0
 17a:	ef e5       	ldi	r30, 0x5F	; 95
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	80 81       	ld	r24, Z
 180:	8f 77       	andi	r24, 0x7F	; 127
 182:	8c 93       	st	X, r24
}
 184:	cf 91       	pop	r28
 186:	df 91       	pop	r29
 188:	08 95       	ret

0000018a <EXTI_EnableDisable>:

#include "EXTI_Interface.h"
#include "EXTI_Private.h"

void EXTI_EnableDisable(u8 Copy_u8EXTI_INTNum_e , u8 Copy_u8EXTI_MODE_e)
{
 18a:	df 93       	push	r29
 18c:	cf 93       	push	r28
 18e:	00 d0       	rcall	.+0      	; 0x190 <EXTI_EnableDisable+0x6>
 190:	00 d0       	rcall	.+0      	; 0x192 <EXTI_EnableDisable+0x8>
 192:	cd b7       	in	r28, 0x3d	; 61
 194:	de b7       	in	r29, 0x3e	; 62
 196:	89 83       	std	Y+1, r24	; 0x01
 198:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8EXTI_INTNum_e)
 19a:	89 81       	ldd	r24, Y+1	; 0x01
 19c:	28 2f       	mov	r18, r24
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	3c 83       	std	Y+4, r19	; 0x04
 1a2:	2b 83       	std	Y+3, r18	; 0x03
 1a4:	8b 81       	ldd	r24, Y+3	; 0x03
 1a6:	9c 81       	ldd	r25, Y+4	; 0x04
 1a8:	81 30       	cpi	r24, 0x01	; 1
 1aa:	91 05       	cpc	r25, r1
 1ac:	01 f1       	breq	.+64     	; 0x1ee <EXTI_EnableDisable+0x64>
 1ae:	2b 81       	ldd	r18, Y+3	; 0x03
 1b0:	3c 81       	ldd	r19, Y+4	; 0x04
 1b2:	22 30       	cpi	r18, 0x02	; 2
 1b4:	31 05       	cpc	r19, r1
 1b6:	89 f1       	breq	.+98     	; 0x21a <EXTI_EnableDisable+0x90>
 1b8:	8b 81       	ldd	r24, Y+3	; 0x03
 1ba:	9c 81       	ldd	r25, Y+4	; 0x04
 1bc:	00 97       	sbiw	r24, 0x00	; 0
 1be:	09 f0       	breq	.+2      	; 0x1c2 <EXTI_EnableDisable+0x38>
 1c0:	41 c0       	rjmp	.+130    	; 0x244 <EXTI_EnableDisable+0xba>
	{
	case EXTI_INT_0:
		if(EXTI_ENABLE == Copy_u8EXTI_MODE_e)
 1c2:	8a 81       	ldd	r24, Y+2	; 0x02
 1c4:	81 30       	cpi	r24, 0x01	; 1
 1c6:	41 f4       	brne	.+16     	; 0x1d8 <EXTI_EnableDisable+0x4e>
		{
			SET_BIT(GICR , GICR_INT0);
 1c8:	ab e5       	ldi	r26, 0x5B	; 91
 1ca:	b0 e0       	ldi	r27, 0x00	; 0
 1cc:	eb e5       	ldi	r30, 0x5B	; 91
 1ce:	f0 e0       	ldi	r31, 0x00	; 0
 1d0:	80 81       	ld	r24, Z
 1d2:	80 64       	ori	r24, 0x40	; 64
 1d4:	8c 93       	st	X, r24
 1d6:	36 c0       	rjmp	.+108    	; 0x244 <EXTI_EnableDisable+0xba>
		}
		else if(EXTI_DISABLE == Copy_u8EXTI_MODE_e)
 1d8:	8a 81       	ldd	r24, Y+2	; 0x02
 1da:	88 23       	and	r24, r24
 1dc:	99 f5       	brne	.+102    	; 0x244 <EXTI_EnableDisable+0xba>
		{
			CLR_BIT(GICR , GICR_INT0);
 1de:	ab e5       	ldi	r26, 0x5B	; 91
 1e0:	b0 e0       	ldi	r27, 0x00	; 0
 1e2:	eb e5       	ldi	r30, 0x5B	; 91
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	80 81       	ld	r24, Z
 1e8:	8f 7b       	andi	r24, 0xBF	; 191
 1ea:	8c 93       	st	X, r24
 1ec:	2b c0       	rjmp	.+86     	; 0x244 <EXTI_EnableDisable+0xba>
		}
		break;


	case EXTI_INT_1:
		if(EXTI_ENABLE == Copy_u8EXTI_MODE_e)
 1ee:	8a 81       	ldd	r24, Y+2	; 0x02
 1f0:	81 30       	cpi	r24, 0x01	; 1
 1f2:	41 f4       	brne	.+16     	; 0x204 <EXTI_EnableDisable+0x7a>
		{
			SET_BIT(GICR , GICR_INT1);
 1f4:	ab e5       	ldi	r26, 0x5B	; 91
 1f6:	b0 e0       	ldi	r27, 0x00	; 0
 1f8:	eb e5       	ldi	r30, 0x5B	; 91
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	80 81       	ld	r24, Z
 1fe:	80 68       	ori	r24, 0x80	; 128
 200:	8c 93       	st	X, r24
 202:	20 c0       	rjmp	.+64     	; 0x244 <EXTI_EnableDisable+0xba>
		}
		else if(EXTI_DISABLE == Copy_u8EXTI_MODE_e)
 204:	8a 81       	ldd	r24, Y+2	; 0x02
 206:	88 23       	and	r24, r24
 208:	e9 f4       	brne	.+58     	; 0x244 <EXTI_EnableDisable+0xba>
		{
			CLR_BIT(GICR , GICR_INT1);
 20a:	ab e5       	ldi	r26, 0x5B	; 91
 20c:	b0 e0       	ldi	r27, 0x00	; 0
 20e:	eb e5       	ldi	r30, 0x5B	; 91
 210:	f0 e0       	ldi	r31, 0x00	; 0
 212:	80 81       	ld	r24, Z
 214:	8f 77       	andi	r24, 0x7F	; 127
 216:	8c 93       	st	X, r24
 218:	15 c0       	rjmp	.+42     	; 0x244 <EXTI_EnableDisable+0xba>
		break;



	case EXTI_INT_2:
		if(EXTI_ENABLE == Copy_u8EXTI_MODE_e)
 21a:	8a 81       	ldd	r24, Y+2	; 0x02
 21c:	81 30       	cpi	r24, 0x01	; 1
 21e:	41 f4       	brne	.+16     	; 0x230 <EXTI_EnableDisable+0xa6>
		{
			SET_BIT(GICR , GICR_INT2);
 220:	ab e5       	ldi	r26, 0x5B	; 91
 222:	b0 e0       	ldi	r27, 0x00	; 0
 224:	eb e5       	ldi	r30, 0x5B	; 91
 226:	f0 e0       	ldi	r31, 0x00	; 0
 228:	80 81       	ld	r24, Z
 22a:	80 62       	ori	r24, 0x20	; 32
 22c:	8c 93       	st	X, r24
 22e:	0a c0       	rjmp	.+20     	; 0x244 <EXTI_EnableDisable+0xba>
		}
		else if(EXTI_DISABLE == Copy_u8EXTI_MODE_e)
 230:	8a 81       	ldd	r24, Y+2	; 0x02
 232:	88 23       	and	r24, r24
 234:	39 f4       	brne	.+14     	; 0x244 <EXTI_EnableDisable+0xba>
		{
			CLR_BIT(GICR , GICR_INT2);
 236:	ab e5       	ldi	r26, 0x5B	; 91
 238:	b0 e0       	ldi	r27, 0x00	; 0
 23a:	eb e5       	ldi	r30, 0x5B	; 91
 23c:	f0 e0       	ldi	r31, 0x00	; 0
 23e:	80 81       	ld	r24, Z
 240:	8f 7d       	andi	r24, 0xDF	; 223
 242:	8c 93       	st	X, r24
		}
		break;
	}
}
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	0f 90       	pop	r0
 24a:	0f 90       	pop	r0
 24c:	cf 91       	pop	r28
 24e:	df 91       	pop	r29
 250:	08 95       	ret

00000252 <EXTI_SetSenstivity>:

void EXTI_SetSenstivity(u8 Copy_u8EXTI_INTNum_e , u8 Copy_u8EXTI_SENSTIVITY_e)
{
 252:	df 93       	push	r29
 254:	cf 93       	push	r28
 256:	cd b7       	in	r28, 0x3d	; 61
 258:	de b7       	in	r29, 0x3e	; 62
 25a:	2a 97       	sbiw	r28, 0x0a	; 10
 25c:	0f b6       	in	r0, 0x3f	; 63
 25e:	f8 94       	cli
 260:	de bf       	out	0x3e, r29	; 62
 262:	0f be       	out	0x3f, r0	; 63
 264:	cd bf       	out	0x3d, r28	; 61
 266:	89 83       	std	Y+1, r24	; 0x01
 268:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8EXTI_INTNum_e)
 26a:	89 81       	ldd	r24, Y+1	; 0x01
 26c:	28 2f       	mov	r18, r24
 26e:	30 e0       	ldi	r19, 0x00	; 0
 270:	3a 87       	std	Y+10, r19	; 0x0a
 272:	29 87       	std	Y+9, r18	; 0x09
 274:	89 85       	ldd	r24, Y+9	; 0x09
 276:	9a 85       	ldd	r25, Y+10	; 0x0a
 278:	81 30       	cpi	r24, 0x01	; 1
 27a:	91 05       	cpc	r25, r1
 27c:	09 f4       	brne	.+2      	; 0x280 <EXTI_SetSenstivity+0x2e>
 27e:	66 c0       	rjmp	.+204    	; 0x34c <EXTI_SetSenstivity+0xfa>
 280:	29 85       	ldd	r18, Y+9	; 0x09
 282:	3a 85       	ldd	r19, Y+10	; 0x0a
 284:	22 30       	cpi	r18, 0x02	; 2
 286:	31 05       	cpc	r19, r1
 288:	09 f4       	brne	.+2      	; 0x28c <EXTI_SetSenstivity+0x3a>
 28a:	bb c0       	rjmp	.+374    	; 0x402 <EXTI_SetSenstivity+0x1b0>
 28c:	89 85       	ldd	r24, Y+9	; 0x09
 28e:	9a 85       	ldd	r25, Y+10	; 0x0a
 290:	00 97       	sbiw	r24, 0x00	; 0
 292:	09 f0       	breq	.+2      	; 0x296 <EXTI_SetSenstivity+0x44>
 294:	d5 c0       	rjmp	.+426    	; 0x440 <EXTI_SetSenstivity+0x1ee>
	{
	case EXTI_INT_0:
		switch(Copy_u8EXTI_SENSTIVITY_e)
 296:	8a 81       	ldd	r24, Y+2	; 0x02
 298:	28 2f       	mov	r18, r24
 29a:	30 e0       	ldi	r19, 0x00	; 0
 29c:	38 87       	std	Y+8, r19	; 0x08
 29e:	2f 83       	std	Y+7, r18	; 0x07
 2a0:	8f 81       	ldd	r24, Y+7	; 0x07
 2a2:	98 85       	ldd	r25, Y+8	; 0x08
 2a4:	81 30       	cpi	r24, 0x01	; 1
 2a6:	91 05       	cpc	r25, r1
 2a8:	21 f1       	breq	.+72     	; 0x2f2 <EXTI_SetSenstivity+0xa0>
 2aa:	2f 81       	ldd	r18, Y+7	; 0x07
 2ac:	38 85       	ldd	r19, Y+8	; 0x08
 2ae:	22 30       	cpi	r18, 0x02	; 2
 2b0:	31 05       	cpc	r19, r1
 2b2:	2c f4       	brge	.+10     	; 0x2be <EXTI_SetSenstivity+0x6c>
 2b4:	8f 81       	ldd	r24, Y+7	; 0x07
 2b6:	98 85       	ldd	r25, Y+8	; 0x08
 2b8:	00 97       	sbiw	r24, 0x00	; 0
 2ba:	61 f0       	breq	.+24     	; 0x2d4 <EXTI_SetSenstivity+0x82>
 2bc:	c1 c0       	rjmp	.+386    	; 0x440 <EXTI_SetSenstivity+0x1ee>
 2be:	2f 81       	ldd	r18, Y+7	; 0x07
 2c0:	38 85       	ldd	r19, Y+8	; 0x08
 2c2:	22 30       	cpi	r18, 0x02	; 2
 2c4:	31 05       	cpc	r19, r1
 2c6:	21 f1       	breq	.+72     	; 0x310 <EXTI_SetSenstivity+0xbe>
 2c8:	8f 81       	ldd	r24, Y+7	; 0x07
 2ca:	98 85       	ldd	r25, Y+8	; 0x08
 2cc:	83 30       	cpi	r24, 0x03	; 3
 2ce:	91 05       	cpc	r25, r1
 2d0:	71 f1       	breq	.+92     	; 0x32e <EXTI_SetSenstivity+0xdc>
 2d2:	b6 c0       	rjmp	.+364    	; 0x440 <EXTI_SetSenstivity+0x1ee>
		{
		case EXTI_LOW_LEVEL:
			CLR_BIT(MCUCR,MCUCR_ISC00);
 2d4:	a5 e5       	ldi	r26, 0x55	; 85
 2d6:	b0 e0       	ldi	r27, 0x00	; 0
 2d8:	e5 e5       	ldi	r30, 0x55	; 85
 2da:	f0 e0       	ldi	r31, 0x00	; 0
 2dc:	80 81       	ld	r24, Z
 2de:	8e 7f       	andi	r24, 0xFE	; 254
 2e0:	8c 93       	st	X, r24
			CLR_BIT(MCUCR,MCUCR_ISC01);
 2e2:	a5 e5       	ldi	r26, 0x55	; 85
 2e4:	b0 e0       	ldi	r27, 0x00	; 0
 2e6:	e5 e5       	ldi	r30, 0x55	; 85
 2e8:	f0 e0       	ldi	r31, 0x00	; 0
 2ea:	80 81       	ld	r24, Z
 2ec:	8d 7f       	andi	r24, 0xFD	; 253
 2ee:	8c 93       	st	X, r24
 2f0:	a7 c0       	rjmp	.+334    	; 0x440 <EXTI_SetSenstivity+0x1ee>
			break;

		case EXTI_ON_CHANGE:
			SET_BIT(MCUCR,MCUCR_ISC00);
 2f2:	a5 e5       	ldi	r26, 0x55	; 85
 2f4:	b0 e0       	ldi	r27, 0x00	; 0
 2f6:	e5 e5       	ldi	r30, 0x55	; 85
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	80 81       	ld	r24, Z
 2fc:	81 60       	ori	r24, 0x01	; 1
 2fe:	8c 93       	st	X, r24
			CLR_BIT(MCUCR,MCUCR_ISC01);
 300:	a5 e5       	ldi	r26, 0x55	; 85
 302:	b0 e0       	ldi	r27, 0x00	; 0
 304:	e5 e5       	ldi	r30, 0x55	; 85
 306:	f0 e0       	ldi	r31, 0x00	; 0
 308:	80 81       	ld	r24, Z
 30a:	8d 7f       	andi	r24, 0xFD	; 253
 30c:	8c 93       	st	X, r24
 30e:	98 c0       	rjmp	.+304    	; 0x440 <EXTI_SetSenstivity+0x1ee>
			break;

		case EXTI_FAILLING_EDGE:
			CLR_BIT(MCUCR,MCUCR_ISC00);
 310:	a5 e5       	ldi	r26, 0x55	; 85
 312:	b0 e0       	ldi	r27, 0x00	; 0
 314:	e5 e5       	ldi	r30, 0x55	; 85
 316:	f0 e0       	ldi	r31, 0x00	; 0
 318:	80 81       	ld	r24, Z
 31a:	8e 7f       	andi	r24, 0xFE	; 254
 31c:	8c 93       	st	X, r24
			SET_BIT(MCUCR,MCUCR_ISC01);
 31e:	a5 e5       	ldi	r26, 0x55	; 85
 320:	b0 e0       	ldi	r27, 0x00	; 0
 322:	e5 e5       	ldi	r30, 0x55	; 85
 324:	f0 e0       	ldi	r31, 0x00	; 0
 326:	80 81       	ld	r24, Z
 328:	82 60       	ori	r24, 0x02	; 2
 32a:	8c 93       	st	X, r24
 32c:	89 c0       	rjmp	.+274    	; 0x440 <EXTI_SetSenstivity+0x1ee>
			break;

		case EXTI_RISING_EDGE:
			SET_BIT(MCUCR,MCUCR_ISC00);
 32e:	a5 e5       	ldi	r26, 0x55	; 85
 330:	b0 e0       	ldi	r27, 0x00	; 0
 332:	e5 e5       	ldi	r30, 0x55	; 85
 334:	f0 e0       	ldi	r31, 0x00	; 0
 336:	80 81       	ld	r24, Z
 338:	81 60       	ori	r24, 0x01	; 1
 33a:	8c 93       	st	X, r24
			SET_BIT(MCUCR,MCUCR_ISC01);
 33c:	a5 e5       	ldi	r26, 0x55	; 85
 33e:	b0 e0       	ldi	r27, 0x00	; 0
 340:	e5 e5       	ldi	r30, 0x55	; 85
 342:	f0 e0       	ldi	r31, 0x00	; 0
 344:	80 81       	ld	r24, Z
 346:	82 60       	ori	r24, 0x02	; 2
 348:	8c 93       	st	X, r24
 34a:	7a c0       	rjmp	.+244    	; 0x440 <EXTI_SetSenstivity+0x1ee>
			break;
		}
		break;

		case EXTI_INT_1:
			switch(Copy_u8EXTI_SENSTIVITY_e)
 34c:	8a 81       	ldd	r24, Y+2	; 0x02
 34e:	28 2f       	mov	r18, r24
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	3e 83       	std	Y+6, r19	; 0x06
 354:	2d 83       	std	Y+5, r18	; 0x05
 356:	8d 81       	ldd	r24, Y+5	; 0x05
 358:	9e 81       	ldd	r25, Y+6	; 0x06
 35a:	81 30       	cpi	r24, 0x01	; 1
 35c:	91 05       	cpc	r25, r1
 35e:	21 f1       	breq	.+72     	; 0x3a8 <EXTI_SetSenstivity+0x156>
 360:	2d 81       	ldd	r18, Y+5	; 0x05
 362:	3e 81       	ldd	r19, Y+6	; 0x06
 364:	22 30       	cpi	r18, 0x02	; 2
 366:	31 05       	cpc	r19, r1
 368:	2c f4       	brge	.+10     	; 0x374 <EXTI_SetSenstivity+0x122>
 36a:	8d 81       	ldd	r24, Y+5	; 0x05
 36c:	9e 81       	ldd	r25, Y+6	; 0x06
 36e:	00 97       	sbiw	r24, 0x00	; 0
 370:	61 f0       	breq	.+24     	; 0x38a <EXTI_SetSenstivity+0x138>
 372:	66 c0       	rjmp	.+204    	; 0x440 <EXTI_SetSenstivity+0x1ee>
 374:	2d 81       	ldd	r18, Y+5	; 0x05
 376:	3e 81       	ldd	r19, Y+6	; 0x06
 378:	22 30       	cpi	r18, 0x02	; 2
 37a:	31 05       	cpc	r19, r1
 37c:	21 f1       	breq	.+72     	; 0x3c6 <EXTI_SetSenstivity+0x174>
 37e:	8d 81       	ldd	r24, Y+5	; 0x05
 380:	9e 81       	ldd	r25, Y+6	; 0x06
 382:	83 30       	cpi	r24, 0x03	; 3
 384:	91 05       	cpc	r25, r1
 386:	71 f1       	breq	.+92     	; 0x3e4 <EXTI_SetSenstivity+0x192>
 388:	5b c0       	rjmp	.+182    	; 0x440 <EXTI_SetSenstivity+0x1ee>
			{
			case EXTI_LOW_LEVEL:
				CLR_BIT(MCUCR,MCUCR_ISC10);
 38a:	a5 e5       	ldi	r26, 0x55	; 85
 38c:	b0 e0       	ldi	r27, 0x00	; 0
 38e:	e5 e5       	ldi	r30, 0x55	; 85
 390:	f0 e0       	ldi	r31, 0x00	; 0
 392:	80 81       	ld	r24, Z
 394:	8b 7f       	andi	r24, 0xFB	; 251
 396:	8c 93       	st	X, r24
				CLR_BIT(MCUCR,MCUCR_ISC11);
 398:	a5 e5       	ldi	r26, 0x55	; 85
 39a:	b0 e0       	ldi	r27, 0x00	; 0
 39c:	e5 e5       	ldi	r30, 0x55	; 85
 39e:	f0 e0       	ldi	r31, 0x00	; 0
 3a0:	80 81       	ld	r24, Z
 3a2:	87 7f       	andi	r24, 0xF7	; 247
 3a4:	8c 93       	st	X, r24
 3a6:	4c c0       	rjmp	.+152    	; 0x440 <EXTI_SetSenstivity+0x1ee>
				break;

			case EXTI_ON_CHANGE:
				SET_BIT(MCUCR,MCUCR_ISC10);
 3a8:	a5 e5       	ldi	r26, 0x55	; 85
 3aa:	b0 e0       	ldi	r27, 0x00	; 0
 3ac:	e5 e5       	ldi	r30, 0x55	; 85
 3ae:	f0 e0       	ldi	r31, 0x00	; 0
 3b0:	80 81       	ld	r24, Z
 3b2:	84 60       	ori	r24, 0x04	; 4
 3b4:	8c 93       	st	X, r24
				CLR_BIT(MCUCR,MCUCR_ISC11);
 3b6:	a5 e5       	ldi	r26, 0x55	; 85
 3b8:	b0 e0       	ldi	r27, 0x00	; 0
 3ba:	e5 e5       	ldi	r30, 0x55	; 85
 3bc:	f0 e0       	ldi	r31, 0x00	; 0
 3be:	80 81       	ld	r24, Z
 3c0:	87 7f       	andi	r24, 0xF7	; 247
 3c2:	8c 93       	st	X, r24
 3c4:	3d c0       	rjmp	.+122    	; 0x440 <EXTI_SetSenstivity+0x1ee>
				break;

			case EXTI_FAILLING_EDGE:
				CLR_BIT(MCUCR,MCUCR_ISC10);
 3c6:	a5 e5       	ldi	r26, 0x55	; 85
 3c8:	b0 e0       	ldi	r27, 0x00	; 0
 3ca:	e5 e5       	ldi	r30, 0x55	; 85
 3cc:	f0 e0       	ldi	r31, 0x00	; 0
 3ce:	80 81       	ld	r24, Z
 3d0:	8b 7f       	andi	r24, 0xFB	; 251
 3d2:	8c 93       	st	X, r24
				SET_BIT(MCUCR,MCUCR_ISC11);
 3d4:	a5 e5       	ldi	r26, 0x55	; 85
 3d6:	b0 e0       	ldi	r27, 0x00	; 0
 3d8:	e5 e5       	ldi	r30, 0x55	; 85
 3da:	f0 e0       	ldi	r31, 0x00	; 0
 3dc:	80 81       	ld	r24, Z
 3de:	88 60       	ori	r24, 0x08	; 8
 3e0:	8c 93       	st	X, r24
 3e2:	2e c0       	rjmp	.+92     	; 0x440 <EXTI_SetSenstivity+0x1ee>
				break;

			case EXTI_RISING_EDGE:
				SET_BIT(MCUCR,MCUCR_ISC10);
 3e4:	a5 e5       	ldi	r26, 0x55	; 85
 3e6:	b0 e0       	ldi	r27, 0x00	; 0
 3e8:	e5 e5       	ldi	r30, 0x55	; 85
 3ea:	f0 e0       	ldi	r31, 0x00	; 0
 3ec:	80 81       	ld	r24, Z
 3ee:	84 60       	ori	r24, 0x04	; 4
 3f0:	8c 93       	st	X, r24
				SET_BIT(MCUCR,MCUCR_ISC11);
 3f2:	a5 e5       	ldi	r26, 0x55	; 85
 3f4:	b0 e0       	ldi	r27, 0x00	; 0
 3f6:	e5 e5       	ldi	r30, 0x55	; 85
 3f8:	f0 e0       	ldi	r31, 0x00	; 0
 3fa:	80 81       	ld	r24, Z
 3fc:	88 60       	ori	r24, 0x08	; 8
 3fe:	8c 93       	st	X, r24
 400:	1f c0       	rjmp	.+62     	; 0x440 <EXTI_SetSenstivity+0x1ee>
				break;
			}
			break;

			case EXTI_INT_2:
				switch(Copy_u8EXTI_SENSTIVITY_e)
 402:	8a 81       	ldd	r24, Y+2	; 0x02
 404:	28 2f       	mov	r18, r24
 406:	30 e0       	ldi	r19, 0x00	; 0
 408:	3c 83       	std	Y+4, r19	; 0x04
 40a:	2b 83       	std	Y+3, r18	; 0x03
 40c:	8b 81       	ldd	r24, Y+3	; 0x03
 40e:	9c 81       	ldd	r25, Y+4	; 0x04
 410:	82 30       	cpi	r24, 0x02	; 2
 412:	91 05       	cpc	r25, r1
 414:	31 f0       	breq	.+12     	; 0x422 <EXTI_SetSenstivity+0x1d0>
 416:	2b 81       	ldd	r18, Y+3	; 0x03
 418:	3c 81       	ldd	r19, Y+4	; 0x04
 41a:	23 30       	cpi	r18, 0x03	; 3
 41c:	31 05       	cpc	r19, r1
 41e:	49 f0       	breq	.+18     	; 0x432 <EXTI_SetSenstivity+0x1e0>
 420:	0f c0       	rjmp	.+30     	; 0x440 <EXTI_SetSenstivity+0x1ee>
				{
				case
				EXTI_FAILLING_EDGE:
					SET_BIT(MCUCSR , MCUCSR_ISC2);
 422:	a4 e5       	ldi	r26, 0x54	; 84
 424:	b0 e0       	ldi	r27, 0x00	; 0
 426:	e4 e5       	ldi	r30, 0x54	; 84
 428:	f0 e0       	ldi	r31, 0x00	; 0
 42a:	80 81       	ld	r24, Z
 42c:	80 64       	ori	r24, 0x40	; 64
 42e:	8c 93       	st	X, r24
 430:	07 c0       	rjmp	.+14     	; 0x440 <EXTI_SetSenstivity+0x1ee>
					break;
				case EXTI_RISING_EDGE:
					CLR_BIT(MCUCSR , MCUCSR_ISC2);
 432:	a4 e5       	ldi	r26, 0x54	; 84
 434:	b0 e0       	ldi	r27, 0x00	; 0
 436:	e4 e5       	ldi	r30, 0x54	; 84
 438:	f0 e0       	ldi	r31, 0x00	; 0
 43a:	80 81       	ld	r24, Z
 43c:	8f 7b       	andi	r24, 0xBF	; 191
 43e:	8c 93       	st	X, r24
					break;
				}
				break;
	}
}
 440:	2a 96       	adiw	r28, 0x0a	; 10
 442:	0f b6       	in	r0, 0x3f	; 63
 444:	f8 94       	cli
 446:	de bf       	out	0x3e, r29	; 62
 448:	0f be       	out	0x3f, r0	; 63
 44a:	cd bf       	out	0x3d, r28	; 61
 44c:	cf 91       	pop	r28
 44e:	df 91       	pop	r29
 450:	08 95       	ret

00000452 <MDIO_vSetPinDir>:




void MDIO_vSetPinDir(DIO_PORT_e A_portID, DIO_PIN_e A_pinID, DIO_DIRECTION_e A_pinDirection)
{
 452:	df 93       	push	r29
 454:	cf 93       	push	r28
 456:	cd b7       	in	r28, 0x3d	; 61
 458:	de b7       	in	r29, 0x3e	; 62
 45a:	2d 97       	sbiw	r28, 0x0d	; 13
 45c:	0f b6       	in	r0, 0x3f	; 63
 45e:	f8 94       	cli
 460:	de bf       	out	0x3e, r29	; 62
 462:	0f be       	out	0x3f, r0	; 63
 464:	cd bf       	out	0x3d, r28	; 61
 466:	89 83       	std	Y+1, r24	; 0x01
 468:	6a 83       	std	Y+2, r22	; 0x02
 46a:	4b 83       	std	Y+3, r20	; 0x03
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) && (A_pinDirection <= DIO_OUTPUT) )
 46c:	89 81       	ldd	r24, Y+1	; 0x01
 46e:	84 30       	cpi	r24, 0x04	; 4
 470:	08 f0       	brcs	.+2      	; 0x474 <MDIO_vSetPinDir+0x22>
 472:	09 c1       	rjmp	.+530    	; 0x686 <MDIO_vSetPinDir+0x234>
 474:	8a 81       	ldd	r24, Y+2	; 0x02
 476:	88 30       	cpi	r24, 0x08	; 8
 478:	08 f0       	brcs	.+2      	; 0x47c <MDIO_vSetPinDir+0x2a>
 47a:	05 c1       	rjmp	.+522    	; 0x686 <MDIO_vSetPinDir+0x234>
 47c:	8b 81       	ldd	r24, Y+3	; 0x03
 47e:	82 30       	cpi	r24, 0x02	; 2
 480:	08 f0       	brcs	.+2      	; 0x484 <MDIO_vSetPinDir+0x32>
 482:	01 c1       	rjmp	.+514    	; 0x686 <MDIO_vSetPinDir+0x234>
	{
		switch (A_portID)
 484:	89 81       	ldd	r24, Y+1	; 0x01
 486:	28 2f       	mov	r18, r24
 488:	30 e0       	ldi	r19, 0x00	; 0
 48a:	3d 87       	std	Y+13, r19	; 0x0d
 48c:	2c 87       	std	Y+12, r18	; 0x0c
 48e:	8c 85       	ldd	r24, Y+12	; 0x0c
 490:	9d 85       	ldd	r25, Y+13	; 0x0d
 492:	81 30       	cpi	r24, 0x01	; 1
 494:	91 05       	cpc	r25, r1
 496:	09 f4       	brne	.+2      	; 0x49a <MDIO_vSetPinDir+0x48>
 498:	4f c0       	rjmp	.+158    	; 0x538 <MDIO_vSetPinDir+0xe6>
 49a:	2c 85       	ldd	r18, Y+12	; 0x0c
 49c:	3d 85       	ldd	r19, Y+13	; 0x0d
 49e:	22 30       	cpi	r18, 0x02	; 2
 4a0:	31 05       	cpc	r19, r1
 4a2:	2c f4       	brge	.+10     	; 0x4ae <MDIO_vSetPinDir+0x5c>
 4a4:	8c 85       	ldd	r24, Y+12	; 0x0c
 4a6:	9d 85       	ldd	r25, Y+13	; 0x0d
 4a8:	00 97       	sbiw	r24, 0x00	; 0
 4aa:	71 f0       	breq	.+28     	; 0x4c8 <MDIO_vSetPinDir+0x76>
 4ac:	ec c0       	rjmp	.+472    	; 0x686 <MDIO_vSetPinDir+0x234>
 4ae:	2c 85       	ldd	r18, Y+12	; 0x0c
 4b0:	3d 85       	ldd	r19, Y+13	; 0x0d
 4b2:	22 30       	cpi	r18, 0x02	; 2
 4b4:	31 05       	cpc	r19, r1
 4b6:	09 f4       	brne	.+2      	; 0x4ba <MDIO_vSetPinDir+0x68>
 4b8:	77 c0       	rjmp	.+238    	; 0x5a8 <MDIO_vSetPinDir+0x156>
 4ba:	8c 85       	ldd	r24, Y+12	; 0x0c
 4bc:	9d 85       	ldd	r25, Y+13	; 0x0d
 4be:	83 30       	cpi	r24, 0x03	; 3
 4c0:	91 05       	cpc	r25, r1
 4c2:	09 f4       	brne	.+2      	; 0x4c6 <MDIO_vSetPinDir+0x74>
 4c4:	a9 c0       	rjmp	.+338    	; 0x618 <MDIO_vSetPinDir+0x1c6>
 4c6:	df c0       	rjmp	.+446    	; 0x686 <MDIO_vSetPinDir+0x234>
		{
		case DIO_PORTA:
			switch (A_pinDirection)
 4c8:	8b 81       	ldd	r24, Y+3	; 0x03
 4ca:	28 2f       	mov	r18, r24
 4cc:	30 e0       	ldi	r19, 0x00	; 0
 4ce:	3b 87       	std	Y+11, r19	; 0x0b
 4d0:	2a 87       	std	Y+10, r18	; 0x0a
 4d2:	8a 85       	ldd	r24, Y+10	; 0x0a
 4d4:	9b 85       	ldd	r25, Y+11	; 0x0b
 4d6:	00 97       	sbiw	r24, 0x00	; 0
 4d8:	31 f0       	breq	.+12     	; 0x4e6 <MDIO_vSetPinDir+0x94>
 4da:	2a 85       	ldd	r18, Y+10	; 0x0a
 4dc:	3b 85       	ldd	r19, Y+11	; 0x0b
 4de:	21 30       	cpi	r18, 0x01	; 1
 4e0:	31 05       	cpc	r19, r1
 4e2:	b1 f0       	breq	.+44     	; 0x510 <MDIO_vSetPinDir+0xbe>
 4e4:	d0 c0       	rjmp	.+416    	; 0x686 <MDIO_vSetPinDir+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRA_REG,A_pinID);
 4e6:	aa e3       	ldi	r26, 0x3A	; 58
 4e8:	b0 e0       	ldi	r27, 0x00	; 0
 4ea:	ea e3       	ldi	r30, 0x3A	; 58
 4ec:	f0 e0       	ldi	r31, 0x00	; 0
 4ee:	80 81       	ld	r24, Z
 4f0:	48 2f       	mov	r20, r24
 4f2:	8a 81       	ldd	r24, Y+2	; 0x02
 4f4:	28 2f       	mov	r18, r24
 4f6:	30 e0       	ldi	r19, 0x00	; 0
 4f8:	81 e0       	ldi	r24, 0x01	; 1
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	02 2e       	mov	r0, r18
 4fe:	02 c0       	rjmp	.+4      	; 0x504 <MDIO_vSetPinDir+0xb2>
 500:	88 0f       	add	r24, r24
 502:	99 1f       	adc	r25, r25
 504:	0a 94       	dec	r0
 506:	e2 f7       	brpl	.-8      	; 0x500 <MDIO_vSetPinDir+0xae>
 508:	80 95       	com	r24
 50a:	84 23       	and	r24, r20
 50c:	8c 93       	st	X, r24
 50e:	bb c0       	rjmp	.+374    	; 0x686 <MDIO_vSetPinDir+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRA_REG,A_pinID);
 510:	aa e3       	ldi	r26, 0x3A	; 58
 512:	b0 e0       	ldi	r27, 0x00	; 0
 514:	ea e3       	ldi	r30, 0x3A	; 58
 516:	f0 e0       	ldi	r31, 0x00	; 0
 518:	80 81       	ld	r24, Z
 51a:	48 2f       	mov	r20, r24
 51c:	8a 81       	ldd	r24, Y+2	; 0x02
 51e:	28 2f       	mov	r18, r24
 520:	30 e0       	ldi	r19, 0x00	; 0
 522:	81 e0       	ldi	r24, 0x01	; 1
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	02 2e       	mov	r0, r18
 528:	02 c0       	rjmp	.+4      	; 0x52e <MDIO_vSetPinDir+0xdc>
 52a:	88 0f       	add	r24, r24
 52c:	99 1f       	adc	r25, r25
 52e:	0a 94       	dec	r0
 530:	e2 f7       	brpl	.-8      	; 0x52a <MDIO_vSetPinDir+0xd8>
 532:	84 2b       	or	r24, r20
 534:	8c 93       	st	X, r24
 536:	a7 c0       	rjmp	.+334    	; 0x686 <MDIO_vSetPinDir+0x234>
				break;
			}
			break;
		case DIO_PORTB:
			switch (A_pinDirection)
 538:	8b 81       	ldd	r24, Y+3	; 0x03
 53a:	28 2f       	mov	r18, r24
 53c:	30 e0       	ldi	r19, 0x00	; 0
 53e:	39 87       	std	Y+9, r19	; 0x09
 540:	28 87       	std	Y+8, r18	; 0x08
 542:	88 85       	ldd	r24, Y+8	; 0x08
 544:	99 85       	ldd	r25, Y+9	; 0x09
 546:	00 97       	sbiw	r24, 0x00	; 0
 548:	31 f0       	breq	.+12     	; 0x556 <MDIO_vSetPinDir+0x104>
 54a:	28 85       	ldd	r18, Y+8	; 0x08
 54c:	39 85       	ldd	r19, Y+9	; 0x09
 54e:	21 30       	cpi	r18, 0x01	; 1
 550:	31 05       	cpc	r19, r1
 552:	b1 f0       	breq	.+44     	; 0x580 <MDIO_vSetPinDir+0x12e>
 554:	98 c0       	rjmp	.+304    	; 0x686 <MDIO_vSetPinDir+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRB_REG,A_pinID);
 556:	a7 e3       	ldi	r26, 0x37	; 55
 558:	b0 e0       	ldi	r27, 0x00	; 0
 55a:	e7 e3       	ldi	r30, 0x37	; 55
 55c:	f0 e0       	ldi	r31, 0x00	; 0
 55e:	80 81       	ld	r24, Z
 560:	48 2f       	mov	r20, r24
 562:	8a 81       	ldd	r24, Y+2	; 0x02
 564:	28 2f       	mov	r18, r24
 566:	30 e0       	ldi	r19, 0x00	; 0
 568:	81 e0       	ldi	r24, 0x01	; 1
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	02 2e       	mov	r0, r18
 56e:	02 c0       	rjmp	.+4      	; 0x574 <MDIO_vSetPinDir+0x122>
 570:	88 0f       	add	r24, r24
 572:	99 1f       	adc	r25, r25
 574:	0a 94       	dec	r0
 576:	e2 f7       	brpl	.-8      	; 0x570 <MDIO_vSetPinDir+0x11e>
 578:	80 95       	com	r24
 57a:	84 23       	and	r24, r20
 57c:	8c 93       	st	X, r24
 57e:	83 c0       	rjmp	.+262    	; 0x686 <MDIO_vSetPinDir+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRB_REG,A_pinID);
 580:	a7 e3       	ldi	r26, 0x37	; 55
 582:	b0 e0       	ldi	r27, 0x00	; 0
 584:	e7 e3       	ldi	r30, 0x37	; 55
 586:	f0 e0       	ldi	r31, 0x00	; 0
 588:	80 81       	ld	r24, Z
 58a:	48 2f       	mov	r20, r24
 58c:	8a 81       	ldd	r24, Y+2	; 0x02
 58e:	28 2f       	mov	r18, r24
 590:	30 e0       	ldi	r19, 0x00	; 0
 592:	81 e0       	ldi	r24, 0x01	; 1
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	02 2e       	mov	r0, r18
 598:	02 c0       	rjmp	.+4      	; 0x59e <MDIO_vSetPinDir+0x14c>
 59a:	88 0f       	add	r24, r24
 59c:	99 1f       	adc	r25, r25
 59e:	0a 94       	dec	r0
 5a0:	e2 f7       	brpl	.-8      	; 0x59a <MDIO_vSetPinDir+0x148>
 5a2:	84 2b       	or	r24, r20
 5a4:	8c 93       	st	X, r24
 5a6:	6f c0       	rjmp	.+222    	; 0x686 <MDIO_vSetPinDir+0x234>
				break;
			}
			break;
		case DIO_PORTC:
			switch (A_pinDirection)
 5a8:	8b 81       	ldd	r24, Y+3	; 0x03
 5aa:	28 2f       	mov	r18, r24
 5ac:	30 e0       	ldi	r19, 0x00	; 0
 5ae:	3f 83       	std	Y+7, r19	; 0x07
 5b0:	2e 83       	std	Y+6, r18	; 0x06
 5b2:	8e 81       	ldd	r24, Y+6	; 0x06
 5b4:	9f 81       	ldd	r25, Y+7	; 0x07
 5b6:	00 97       	sbiw	r24, 0x00	; 0
 5b8:	31 f0       	breq	.+12     	; 0x5c6 <MDIO_vSetPinDir+0x174>
 5ba:	2e 81       	ldd	r18, Y+6	; 0x06
 5bc:	3f 81       	ldd	r19, Y+7	; 0x07
 5be:	21 30       	cpi	r18, 0x01	; 1
 5c0:	31 05       	cpc	r19, r1
 5c2:	b1 f0       	breq	.+44     	; 0x5f0 <MDIO_vSetPinDir+0x19e>
 5c4:	60 c0       	rjmp	.+192    	; 0x686 <MDIO_vSetPinDir+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRC_REG,A_pinID);
 5c6:	a4 e3       	ldi	r26, 0x34	; 52
 5c8:	b0 e0       	ldi	r27, 0x00	; 0
 5ca:	e4 e3       	ldi	r30, 0x34	; 52
 5cc:	f0 e0       	ldi	r31, 0x00	; 0
 5ce:	80 81       	ld	r24, Z
 5d0:	48 2f       	mov	r20, r24
 5d2:	8a 81       	ldd	r24, Y+2	; 0x02
 5d4:	28 2f       	mov	r18, r24
 5d6:	30 e0       	ldi	r19, 0x00	; 0
 5d8:	81 e0       	ldi	r24, 0x01	; 1
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	02 2e       	mov	r0, r18
 5de:	02 c0       	rjmp	.+4      	; 0x5e4 <MDIO_vSetPinDir+0x192>
 5e0:	88 0f       	add	r24, r24
 5e2:	99 1f       	adc	r25, r25
 5e4:	0a 94       	dec	r0
 5e6:	e2 f7       	brpl	.-8      	; 0x5e0 <MDIO_vSetPinDir+0x18e>
 5e8:	80 95       	com	r24
 5ea:	84 23       	and	r24, r20
 5ec:	8c 93       	st	X, r24
 5ee:	4b c0       	rjmp	.+150    	; 0x686 <MDIO_vSetPinDir+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRC_REG,A_pinID);
 5f0:	a4 e3       	ldi	r26, 0x34	; 52
 5f2:	b0 e0       	ldi	r27, 0x00	; 0
 5f4:	e4 e3       	ldi	r30, 0x34	; 52
 5f6:	f0 e0       	ldi	r31, 0x00	; 0
 5f8:	80 81       	ld	r24, Z
 5fa:	48 2f       	mov	r20, r24
 5fc:	8a 81       	ldd	r24, Y+2	; 0x02
 5fe:	28 2f       	mov	r18, r24
 600:	30 e0       	ldi	r19, 0x00	; 0
 602:	81 e0       	ldi	r24, 0x01	; 1
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	02 2e       	mov	r0, r18
 608:	02 c0       	rjmp	.+4      	; 0x60e <MDIO_vSetPinDir+0x1bc>
 60a:	88 0f       	add	r24, r24
 60c:	99 1f       	adc	r25, r25
 60e:	0a 94       	dec	r0
 610:	e2 f7       	brpl	.-8      	; 0x60a <MDIO_vSetPinDir+0x1b8>
 612:	84 2b       	or	r24, r20
 614:	8c 93       	st	X, r24
 616:	37 c0       	rjmp	.+110    	; 0x686 <MDIO_vSetPinDir+0x234>
				break;
			}
			break;
		case DIO_PORTD:
			switch (A_pinDirection)
 618:	8b 81       	ldd	r24, Y+3	; 0x03
 61a:	28 2f       	mov	r18, r24
 61c:	30 e0       	ldi	r19, 0x00	; 0
 61e:	3d 83       	std	Y+5, r19	; 0x05
 620:	2c 83       	std	Y+4, r18	; 0x04
 622:	8c 81       	ldd	r24, Y+4	; 0x04
 624:	9d 81       	ldd	r25, Y+5	; 0x05
 626:	00 97       	sbiw	r24, 0x00	; 0
 628:	31 f0       	breq	.+12     	; 0x636 <MDIO_vSetPinDir+0x1e4>
 62a:	2c 81       	ldd	r18, Y+4	; 0x04
 62c:	3d 81       	ldd	r19, Y+5	; 0x05
 62e:	21 30       	cpi	r18, 0x01	; 1
 630:	31 05       	cpc	r19, r1
 632:	b1 f0       	breq	.+44     	; 0x660 <MDIO_vSetPinDir+0x20e>
 634:	28 c0       	rjmp	.+80     	; 0x686 <MDIO_vSetPinDir+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRD_REG,A_pinID);
 636:	a1 e3       	ldi	r26, 0x31	; 49
 638:	b0 e0       	ldi	r27, 0x00	; 0
 63a:	e1 e3       	ldi	r30, 0x31	; 49
 63c:	f0 e0       	ldi	r31, 0x00	; 0
 63e:	80 81       	ld	r24, Z
 640:	48 2f       	mov	r20, r24
 642:	8a 81       	ldd	r24, Y+2	; 0x02
 644:	28 2f       	mov	r18, r24
 646:	30 e0       	ldi	r19, 0x00	; 0
 648:	81 e0       	ldi	r24, 0x01	; 1
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	02 2e       	mov	r0, r18
 64e:	02 c0       	rjmp	.+4      	; 0x654 <MDIO_vSetPinDir+0x202>
 650:	88 0f       	add	r24, r24
 652:	99 1f       	adc	r25, r25
 654:	0a 94       	dec	r0
 656:	e2 f7       	brpl	.-8      	; 0x650 <MDIO_vSetPinDir+0x1fe>
 658:	80 95       	com	r24
 65a:	84 23       	and	r24, r20
 65c:	8c 93       	st	X, r24
 65e:	13 c0       	rjmp	.+38     	; 0x686 <MDIO_vSetPinDir+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRD_REG,A_pinID);
 660:	a1 e3       	ldi	r26, 0x31	; 49
 662:	b0 e0       	ldi	r27, 0x00	; 0
 664:	e1 e3       	ldi	r30, 0x31	; 49
 666:	f0 e0       	ldi	r31, 0x00	; 0
 668:	80 81       	ld	r24, Z
 66a:	48 2f       	mov	r20, r24
 66c:	8a 81       	ldd	r24, Y+2	; 0x02
 66e:	28 2f       	mov	r18, r24
 670:	30 e0       	ldi	r19, 0x00	; 0
 672:	81 e0       	ldi	r24, 0x01	; 1
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	02 2e       	mov	r0, r18
 678:	02 c0       	rjmp	.+4      	; 0x67e <MDIO_vSetPinDir+0x22c>
 67a:	88 0f       	add	r24, r24
 67c:	99 1f       	adc	r25, r25
 67e:	0a 94       	dec	r0
 680:	e2 f7       	brpl	.-8      	; 0x67a <MDIO_vSetPinDir+0x228>
 682:	84 2b       	or	r24, r20
 684:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
 686:	2d 96       	adiw	r28, 0x0d	; 13
 688:	0f b6       	in	r0, 0x3f	; 63
 68a:	f8 94       	cli
 68c:	de bf       	out	0x3e, r29	; 62
 68e:	0f be       	out	0x3f, r0	; 63
 690:	cd bf       	out	0x3d, r28	; 61
 692:	cf 91       	pop	r28
 694:	df 91       	pop	r29
 696:	08 95       	ret

00000698 <MDIO_vSetPinVal>:


void MDIO_vSetPinVal(DIO_PORT_e A_portID, DIO_PIN_e A_pinID, DIO_VALUE_e A_pinValue)
{
 698:	df 93       	push	r29
 69a:	cf 93       	push	r28
 69c:	cd b7       	in	r28, 0x3d	; 61
 69e:	de b7       	in	r29, 0x3e	; 62
 6a0:	2d 97       	sbiw	r28, 0x0d	; 13
 6a2:	0f b6       	in	r0, 0x3f	; 63
 6a4:	f8 94       	cli
 6a6:	de bf       	out	0x3e, r29	; 62
 6a8:	0f be       	out	0x3f, r0	; 63
 6aa:	cd bf       	out	0x3d, r28	; 61
 6ac:	89 83       	std	Y+1, r24	; 0x01
 6ae:	6a 83       	std	Y+2, r22	; 0x02
 6b0:	4b 83       	std	Y+3, r20	; 0x03
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) && (A_pinValue <= DIO_HIGH) )
 6b2:	89 81       	ldd	r24, Y+1	; 0x01
 6b4:	84 30       	cpi	r24, 0x04	; 4
 6b6:	08 f0       	brcs	.+2      	; 0x6ba <MDIO_vSetPinVal+0x22>
 6b8:	09 c1       	rjmp	.+530    	; 0x8cc <__stack+0x6d>
 6ba:	8a 81       	ldd	r24, Y+2	; 0x02
 6bc:	88 30       	cpi	r24, 0x08	; 8
 6be:	08 f0       	brcs	.+2      	; 0x6c2 <MDIO_vSetPinVal+0x2a>
 6c0:	05 c1       	rjmp	.+522    	; 0x8cc <__stack+0x6d>
 6c2:	8b 81       	ldd	r24, Y+3	; 0x03
 6c4:	82 30       	cpi	r24, 0x02	; 2
 6c6:	08 f0       	brcs	.+2      	; 0x6ca <MDIO_vSetPinVal+0x32>
 6c8:	01 c1       	rjmp	.+514    	; 0x8cc <__stack+0x6d>
	{
		switch (A_portID)
 6ca:	89 81       	ldd	r24, Y+1	; 0x01
 6cc:	28 2f       	mov	r18, r24
 6ce:	30 e0       	ldi	r19, 0x00	; 0
 6d0:	3d 87       	std	Y+13, r19	; 0x0d
 6d2:	2c 87       	std	Y+12, r18	; 0x0c
 6d4:	8c 85       	ldd	r24, Y+12	; 0x0c
 6d6:	9d 85       	ldd	r25, Y+13	; 0x0d
 6d8:	81 30       	cpi	r24, 0x01	; 1
 6da:	91 05       	cpc	r25, r1
 6dc:	09 f4       	brne	.+2      	; 0x6e0 <MDIO_vSetPinVal+0x48>
 6de:	4f c0       	rjmp	.+158    	; 0x77e <MDIO_vSetPinVal+0xe6>
 6e0:	2c 85       	ldd	r18, Y+12	; 0x0c
 6e2:	3d 85       	ldd	r19, Y+13	; 0x0d
 6e4:	22 30       	cpi	r18, 0x02	; 2
 6e6:	31 05       	cpc	r19, r1
 6e8:	2c f4       	brge	.+10     	; 0x6f4 <MDIO_vSetPinVal+0x5c>
 6ea:	8c 85       	ldd	r24, Y+12	; 0x0c
 6ec:	9d 85       	ldd	r25, Y+13	; 0x0d
 6ee:	00 97       	sbiw	r24, 0x00	; 0
 6f0:	71 f0       	breq	.+28     	; 0x70e <MDIO_vSetPinVal+0x76>
 6f2:	ec c0       	rjmp	.+472    	; 0x8cc <__stack+0x6d>
 6f4:	2c 85       	ldd	r18, Y+12	; 0x0c
 6f6:	3d 85       	ldd	r19, Y+13	; 0x0d
 6f8:	22 30       	cpi	r18, 0x02	; 2
 6fa:	31 05       	cpc	r19, r1
 6fc:	09 f4       	brne	.+2      	; 0x700 <MDIO_vSetPinVal+0x68>
 6fe:	77 c0       	rjmp	.+238    	; 0x7ee <MDIO_vSetPinVal+0x156>
 700:	8c 85       	ldd	r24, Y+12	; 0x0c
 702:	9d 85       	ldd	r25, Y+13	; 0x0d
 704:	83 30       	cpi	r24, 0x03	; 3
 706:	91 05       	cpc	r25, r1
 708:	09 f4       	brne	.+2      	; 0x70c <MDIO_vSetPinVal+0x74>
 70a:	a9 c0       	rjmp	.+338    	; 0x85e <MDIO_vSetPinVal+0x1c6>
 70c:	df c0       	rjmp	.+446    	; 0x8cc <__stack+0x6d>
		{
		case DIO_PORTA:
			switch (A_pinValue)
 70e:	8b 81       	ldd	r24, Y+3	; 0x03
 710:	28 2f       	mov	r18, r24
 712:	30 e0       	ldi	r19, 0x00	; 0
 714:	3b 87       	std	Y+11, r19	; 0x0b
 716:	2a 87       	std	Y+10, r18	; 0x0a
 718:	8a 85       	ldd	r24, Y+10	; 0x0a
 71a:	9b 85       	ldd	r25, Y+11	; 0x0b
 71c:	00 97       	sbiw	r24, 0x00	; 0
 71e:	31 f0       	breq	.+12     	; 0x72c <MDIO_vSetPinVal+0x94>
 720:	2a 85       	ldd	r18, Y+10	; 0x0a
 722:	3b 85       	ldd	r19, Y+11	; 0x0b
 724:	21 30       	cpi	r18, 0x01	; 1
 726:	31 05       	cpc	r19, r1
 728:	b1 f0       	breq	.+44     	; 0x756 <MDIO_vSetPinVal+0xbe>
 72a:	d0 c0       	rjmp	.+416    	; 0x8cc <__stack+0x6d>
			{
			case DIO_LOW:
				CLR_BIT(PORTA_REG,A_pinID);
 72c:	ab e3       	ldi	r26, 0x3B	; 59
 72e:	b0 e0       	ldi	r27, 0x00	; 0
 730:	eb e3       	ldi	r30, 0x3B	; 59
 732:	f0 e0       	ldi	r31, 0x00	; 0
 734:	80 81       	ld	r24, Z
 736:	48 2f       	mov	r20, r24
 738:	8a 81       	ldd	r24, Y+2	; 0x02
 73a:	28 2f       	mov	r18, r24
 73c:	30 e0       	ldi	r19, 0x00	; 0
 73e:	81 e0       	ldi	r24, 0x01	; 1
 740:	90 e0       	ldi	r25, 0x00	; 0
 742:	02 2e       	mov	r0, r18
 744:	02 c0       	rjmp	.+4      	; 0x74a <MDIO_vSetPinVal+0xb2>
 746:	88 0f       	add	r24, r24
 748:	99 1f       	adc	r25, r25
 74a:	0a 94       	dec	r0
 74c:	e2 f7       	brpl	.-8      	; 0x746 <MDIO_vSetPinVal+0xae>
 74e:	80 95       	com	r24
 750:	84 23       	and	r24, r20
 752:	8c 93       	st	X, r24
 754:	bb c0       	rjmp	.+374    	; 0x8cc <__stack+0x6d>
				break;
			case DIO_HIGH:
				SET_BIT(PORTA_REG,A_pinID);
 756:	ab e3       	ldi	r26, 0x3B	; 59
 758:	b0 e0       	ldi	r27, 0x00	; 0
 75a:	eb e3       	ldi	r30, 0x3B	; 59
 75c:	f0 e0       	ldi	r31, 0x00	; 0
 75e:	80 81       	ld	r24, Z
 760:	48 2f       	mov	r20, r24
 762:	8a 81       	ldd	r24, Y+2	; 0x02
 764:	28 2f       	mov	r18, r24
 766:	30 e0       	ldi	r19, 0x00	; 0
 768:	81 e0       	ldi	r24, 0x01	; 1
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	02 2e       	mov	r0, r18
 76e:	02 c0       	rjmp	.+4      	; 0x774 <MDIO_vSetPinVal+0xdc>
 770:	88 0f       	add	r24, r24
 772:	99 1f       	adc	r25, r25
 774:	0a 94       	dec	r0
 776:	e2 f7       	brpl	.-8      	; 0x770 <MDIO_vSetPinVal+0xd8>
 778:	84 2b       	or	r24, r20
 77a:	8c 93       	st	X, r24
 77c:	a7 c0       	rjmp	.+334    	; 0x8cc <__stack+0x6d>
				break;
			}
			break;
		case DIO_PORTB:
			switch (A_pinValue)
 77e:	8b 81       	ldd	r24, Y+3	; 0x03
 780:	28 2f       	mov	r18, r24
 782:	30 e0       	ldi	r19, 0x00	; 0
 784:	39 87       	std	Y+9, r19	; 0x09
 786:	28 87       	std	Y+8, r18	; 0x08
 788:	88 85       	ldd	r24, Y+8	; 0x08
 78a:	99 85       	ldd	r25, Y+9	; 0x09
 78c:	00 97       	sbiw	r24, 0x00	; 0
 78e:	31 f0       	breq	.+12     	; 0x79c <MDIO_vSetPinVal+0x104>
 790:	28 85       	ldd	r18, Y+8	; 0x08
 792:	39 85       	ldd	r19, Y+9	; 0x09
 794:	21 30       	cpi	r18, 0x01	; 1
 796:	31 05       	cpc	r19, r1
 798:	b1 f0       	breq	.+44     	; 0x7c6 <MDIO_vSetPinVal+0x12e>
 79a:	98 c0       	rjmp	.+304    	; 0x8cc <__stack+0x6d>
			{
			case DIO_LOW:
				CLR_BIT(PORTB_REG,A_pinID);
 79c:	a8 e3       	ldi	r26, 0x38	; 56
 79e:	b0 e0       	ldi	r27, 0x00	; 0
 7a0:	e8 e3       	ldi	r30, 0x38	; 56
 7a2:	f0 e0       	ldi	r31, 0x00	; 0
 7a4:	80 81       	ld	r24, Z
 7a6:	48 2f       	mov	r20, r24
 7a8:	8a 81       	ldd	r24, Y+2	; 0x02
 7aa:	28 2f       	mov	r18, r24
 7ac:	30 e0       	ldi	r19, 0x00	; 0
 7ae:	81 e0       	ldi	r24, 0x01	; 1
 7b0:	90 e0       	ldi	r25, 0x00	; 0
 7b2:	02 2e       	mov	r0, r18
 7b4:	02 c0       	rjmp	.+4      	; 0x7ba <MDIO_vSetPinVal+0x122>
 7b6:	88 0f       	add	r24, r24
 7b8:	99 1f       	adc	r25, r25
 7ba:	0a 94       	dec	r0
 7bc:	e2 f7       	brpl	.-8      	; 0x7b6 <MDIO_vSetPinVal+0x11e>
 7be:	80 95       	com	r24
 7c0:	84 23       	and	r24, r20
 7c2:	8c 93       	st	X, r24
 7c4:	83 c0       	rjmp	.+262    	; 0x8cc <__stack+0x6d>
				break;
			case DIO_HIGH:
				SET_BIT(PORTB_REG,A_pinID);
 7c6:	a8 e3       	ldi	r26, 0x38	; 56
 7c8:	b0 e0       	ldi	r27, 0x00	; 0
 7ca:	e8 e3       	ldi	r30, 0x38	; 56
 7cc:	f0 e0       	ldi	r31, 0x00	; 0
 7ce:	80 81       	ld	r24, Z
 7d0:	48 2f       	mov	r20, r24
 7d2:	8a 81       	ldd	r24, Y+2	; 0x02
 7d4:	28 2f       	mov	r18, r24
 7d6:	30 e0       	ldi	r19, 0x00	; 0
 7d8:	81 e0       	ldi	r24, 0x01	; 1
 7da:	90 e0       	ldi	r25, 0x00	; 0
 7dc:	02 2e       	mov	r0, r18
 7de:	02 c0       	rjmp	.+4      	; 0x7e4 <MDIO_vSetPinVal+0x14c>
 7e0:	88 0f       	add	r24, r24
 7e2:	99 1f       	adc	r25, r25
 7e4:	0a 94       	dec	r0
 7e6:	e2 f7       	brpl	.-8      	; 0x7e0 <MDIO_vSetPinVal+0x148>
 7e8:	84 2b       	or	r24, r20
 7ea:	8c 93       	st	X, r24
 7ec:	6f c0       	rjmp	.+222    	; 0x8cc <__stack+0x6d>
				break;
			}
			break;
		case DIO_PORTC:
			switch (A_pinValue)
 7ee:	8b 81       	ldd	r24, Y+3	; 0x03
 7f0:	28 2f       	mov	r18, r24
 7f2:	30 e0       	ldi	r19, 0x00	; 0
 7f4:	3f 83       	std	Y+7, r19	; 0x07
 7f6:	2e 83       	std	Y+6, r18	; 0x06
 7f8:	8e 81       	ldd	r24, Y+6	; 0x06
 7fa:	9f 81       	ldd	r25, Y+7	; 0x07
 7fc:	00 97       	sbiw	r24, 0x00	; 0
 7fe:	31 f0       	breq	.+12     	; 0x80c <MDIO_vSetPinVal+0x174>
 800:	2e 81       	ldd	r18, Y+6	; 0x06
 802:	3f 81       	ldd	r19, Y+7	; 0x07
 804:	21 30       	cpi	r18, 0x01	; 1
 806:	31 05       	cpc	r19, r1
 808:	b1 f0       	breq	.+44     	; 0x836 <MDIO_vSetPinVal+0x19e>
 80a:	60 c0       	rjmp	.+192    	; 0x8cc <__stack+0x6d>
			{
			case DIO_LOW:
				CLR_BIT(PORTC_REG,A_pinID);
 80c:	a5 e3       	ldi	r26, 0x35	; 53
 80e:	b0 e0       	ldi	r27, 0x00	; 0
 810:	e5 e3       	ldi	r30, 0x35	; 53
 812:	f0 e0       	ldi	r31, 0x00	; 0
 814:	80 81       	ld	r24, Z
 816:	48 2f       	mov	r20, r24
 818:	8a 81       	ldd	r24, Y+2	; 0x02
 81a:	28 2f       	mov	r18, r24
 81c:	30 e0       	ldi	r19, 0x00	; 0
 81e:	81 e0       	ldi	r24, 0x01	; 1
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	02 2e       	mov	r0, r18
 824:	02 c0       	rjmp	.+4      	; 0x82a <MDIO_vSetPinVal+0x192>
 826:	88 0f       	add	r24, r24
 828:	99 1f       	adc	r25, r25
 82a:	0a 94       	dec	r0
 82c:	e2 f7       	brpl	.-8      	; 0x826 <MDIO_vSetPinVal+0x18e>
 82e:	80 95       	com	r24
 830:	84 23       	and	r24, r20
 832:	8c 93       	st	X, r24
 834:	4b c0       	rjmp	.+150    	; 0x8cc <__stack+0x6d>
				break;
			case DIO_HIGH:
				SET_BIT(PORTC_REG,A_pinID);
 836:	a5 e3       	ldi	r26, 0x35	; 53
 838:	b0 e0       	ldi	r27, 0x00	; 0
 83a:	e5 e3       	ldi	r30, 0x35	; 53
 83c:	f0 e0       	ldi	r31, 0x00	; 0
 83e:	80 81       	ld	r24, Z
 840:	48 2f       	mov	r20, r24
 842:	8a 81       	ldd	r24, Y+2	; 0x02
 844:	28 2f       	mov	r18, r24
 846:	30 e0       	ldi	r19, 0x00	; 0
 848:	81 e0       	ldi	r24, 0x01	; 1
 84a:	90 e0       	ldi	r25, 0x00	; 0
 84c:	02 2e       	mov	r0, r18
 84e:	02 c0       	rjmp	.+4      	; 0x854 <MDIO_vSetPinVal+0x1bc>
 850:	88 0f       	add	r24, r24
 852:	99 1f       	adc	r25, r25
 854:	0a 94       	dec	r0
 856:	e2 f7       	brpl	.-8      	; 0x850 <MDIO_vSetPinVal+0x1b8>
 858:	84 2b       	or	r24, r20
 85a:	8c 93       	st	X, r24
 85c:	37 c0       	rjmp	.+110    	; 0x8cc <__stack+0x6d>
				break;
			}
			break;
		case DIO_PORTD:
			switch (A_pinValue)
 85e:	8b 81       	ldd	r24, Y+3	; 0x03
 860:	28 2f       	mov	r18, r24
 862:	30 e0       	ldi	r19, 0x00	; 0
 864:	3d 83       	std	Y+5, r19	; 0x05
 866:	2c 83       	std	Y+4, r18	; 0x04
 868:	8c 81       	ldd	r24, Y+4	; 0x04
 86a:	9d 81       	ldd	r25, Y+5	; 0x05
 86c:	00 97       	sbiw	r24, 0x00	; 0
 86e:	31 f0       	breq	.+12     	; 0x87c <__stack+0x1d>
 870:	2c 81       	ldd	r18, Y+4	; 0x04
 872:	3d 81       	ldd	r19, Y+5	; 0x05
 874:	21 30       	cpi	r18, 0x01	; 1
 876:	31 05       	cpc	r19, r1
 878:	b1 f0       	breq	.+44     	; 0x8a6 <__stack+0x47>
 87a:	28 c0       	rjmp	.+80     	; 0x8cc <__stack+0x6d>
			{
			case DIO_LOW:
				CLR_BIT(PORTD_REG,A_pinID);
 87c:	a2 e3       	ldi	r26, 0x32	; 50
 87e:	b0 e0       	ldi	r27, 0x00	; 0
 880:	e2 e3       	ldi	r30, 0x32	; 50
 882:	f0 e0       	ldi	r31, 0x00	; 0
 884:	80 81       	ld	r24, Z
 886:	48 2f       	mov	r20, r24
 888:	8a 81       	ldd	r24, Y+2	; 0x02
 88a:	28 2f       	mov	r18, r24
 88c:	30 e0       	ldi	r19, 0x00	; 0
 88e:	81 e0       	ldi	r24, 0x01	; 1
 890:	90 e0       	ldi	r25, 0x00	; 0
 892:	02 2e       	mov	r0, r18
 894:	02 c0       	rjmp	.+4      	; 0x89a <__stack+0x3b>
 896:	88 0f       	add	r24, r24
 898:	99 1f       	adc	r25, r25
 89a:	0a 94       	dec	r0
 89c:	e2 f7       	brpl	.-8      	; 0x896 <__stack+0x37>
 89e:	80 95       	com	r24
 8a0:	84 23       	and	r24, r20
 8a2:	8c 93       	st	X, r24
 8a4:	13 c0       	rjmp	.+38     	; 0x8cc <__stack+0x6d>
				break;
			case DIO_HIGH:
				SET_BIT(PORTD_REG,A_pinID);
 8a6:	a2 e3       	ldi	r26, 0x32	; 50
 8a8:	b0 e0       	ldi	r27, 0x00	; 0
 8aa:	e2 e3       	ldi	r30, 0x32	; 50
 8ac:	f0 e0       	ldi	r31, 0x00	; 0
 8ae:	80 81       	ld	r24, Z
 8b0:	48 2f       	mov	r20, r24
 8b2:	8a 81       	ldd	r24, Y+2	; 0x02
 8b4:	28 2f       	mov	r18, r24
 8b6:	30 e0       	ldi	r19, 0x00	; 0
 8b8:	81 e0       	ldi	r24, 0x01	; 1
 8ba:	90 e0       	ldi	r25, 0x00	; 0
 8bc:	02 2e       	mov	r0, r18
 8be:	02 c0       	rjmp	.+4      	; 0x8c4 <__stack+0x65>
 8c0:	88 0f       	add	r24, r24
 8c2:	99 1f       	adc	r25, r25
 8c4:	0a 94       	dec	r0
 8c6:	e2 f7       	brpl	.-8      	; 0x8c0 <__stack+0x61>
 8c8:	84 2b       	or	r24, r20
 8ca:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
 8cc:	2d 96       	adiw	r28, 0x0d	; 13
 8ce:	0f b6       	in	r0, 0x3f	; 63
 8d0:	f8 94       	cli
 8d2:	de bf       	out	0x3e, r29	; 62
 8d4:	0f be       	out	0x3f, r0	; 63
 8d6:	cd bf       	out	0x3d, r28	; 61
 8d8:	cf 91       	pop	r28
 8da:	df 91       	pop	r29
 8dc:	08 95       	ret

000008de <MDIO_GetPinVal>:




DIO_VALUE_e MDIO_GetPinVal(DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
 8de:	df 93       	push	r29
 8e0:	cf 93       	push	r28
 8e2:	00 d0       	rcall	.+0      	; 0x8e4 <MDIO_GetPinVal+0x6>
 8e4:	00 d0       	rcall	.+0      	; 0x8e6 <MDIO_GetPinVal+0x8>
 8e6:	0f 92       	push	r0
 8e8:	cd b7       	in	r28, 0x3d	; 61
 8ea:	de b7       	in	r29, 0x3e	; 62
 8ec:	8a 83       	std	Y+2, r24	; 0x02
 8ee:	6b 83       	std	Y+3, r22	; 0x03
	DIO_VALUE_e local_PinValue;

	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) )
 8f0:	8a 81       	ldd	r24, Y+2	; 0x02
 8f2:	84 30       	cpi	r24, 0x04	; 4
 8f4:	08 f0       	brcs	.+2      	; 0x8f8 <MDIO_GetPinVal+0x1a>
 8f6:	6b c0       	rjmp	.+214    	; 0x9ce <MDIO_GetPinVal+0xf0>
 8f8:	8b 81       	ldd	r24, Y+3	; 0x03
 8fa:	88 30       	cpi	r24, 0x08	; 8
 8fc:	08 f0       	brcs	.+2      	; 0x900 <MDIO_GetPinVal+0x22>
 8fe:	67 c0       	rjmp	.+206    	; 0x9ce <MDIO_GetPinVal+0xf0>
	{
		switch (A_portID)
 900:	8a 81       	ldd	r24, Y+2	; 0x02
 902:	28 2f       	mov	r18, r24
 904:	30 e0       	ldi	r19, 0x00	; 0
 906:	3d 83       	std	Y+5, r19	; 0x05
 908:	2c 83       	std	Y+4, r18	; 0x04
 90a:	4c 81       	ldd	r20, Y+4	; 0x04
 90c:	5d 81       	ldd	r21, Y+5	; 0x05
 90e:	41 30       	cpi	r20, 0x01	; 1
 910:	51 05       	cpc	r21, r1
 912:	41 f1       	breq	.+80     	; 0x964 <MDIO_GetPinVal+0x86>
 914:	8c 81       	ldd	r24, Y+4	; 0x04
 916:	9d 81       	ldd	r25, Y+5	; 0x05
 918:	82 30       	cpi	r24, 0x02	; 2
 91a:	91 05       	cpc	r25, r1
 91c:	34 f4       	brge	.+12     	; 0x92a <MDIO_GetPinVal+0x4c>
 91e:	2c 81       	ldd	r18, Y+4	; 0x04
 920:	3d 81       	ldd	r19, Y+5	; 0x05
 922:	21 15       	cp	r18, r1
 924:	31 05       	cpc	r19, r1
 926:	61 f0       	breq	.+24     	; 0x940 <MDIO_GetPinVal+0x62>
 928:	52 c0       	rjmp	.+164    	; 0x9ce <MDIO_GetPinVal+0xf0>
 92a:	4c 81       	ldd	r20, Y+4	; 0x04
 92c:	5d 81       	ldd	r21, Y+5	; 0x05
 92e:	42 30       	cpi	r20, 0x02	; 2
 930:	51 05       	cpc	r21, r1
 932:	51 f1       	breq	.+84     	; 0x988 <MDIO_GetPinVal+0xaa>
 934:	8c 81       	ldd	r24, Y+4	; 0x04
 936:	9d 81       	ldd	r25, Y+5	; 0x05
 938:	83 30       	cpi	r24, 0x03	; 3
 93a:	91 05       	cpc	r25, r1
 93c:	b9 f1       	breq	.+110    	; 0x9ac <MDIO_GetPinVal+0xce>
 93e:	47 c0       	rjmp	.+142    	; 0x9ce <MDIO_GetPinVal+0xf0>
		{
		case DIO_PORTA:
			local_PinValue = GET_BIT(PINA_REG,A_pinID);
 940:	e9 e3       	ldi	r30, 0x39	; 57
 942:	f0 e0       	ldi	r31, 0x00	; 0
 944:	80 81       	ld	r24, Z
 946:	28 2f       	mov	r18, r24
 948:	30 e0       	ldi	r19, 0x00	; 0
 94a:	8b 81       	ldd	r24, Y+3	; 0x03
 94c:	88 2f       	mov	r24, r24
 94e:	90 e0       	ldi	r25, 0x00	; 0
 950:	a9 01       	movw	r20, r18
 952:	02 c0       	rjmp	.+4      	; 0x958 <MDIO_GetPinVal+0x7a>
 954:	55 95       	asr	r21
 956:	47 95       	ror	r20
 958:	8a 95       	dec	r24
 95a:	e2 f7       	brpl	.-8      	; 0x954 <MDIO_GetPinVal+0x76>
 95c:	ca 01       	movw	r24, r20
 95e:	81 70       	andi	r24, 0x01	; 1
 960:	89 83       	std	Y+1, r24	; 0x01
 962:	35 c0       	rjmp	.+106    	; 0x9ce <MDIO_GetPinVal+0xf0>
			break;
		case DIO_PORTB:
			local_PinValue = GET_BIT(PINB_REG,A_pinID);
 964:	e6 e3       	ldi	r30, 0x36	; 54
 966:	f0 e0       	ldi	r31, 0x00	; 0
 968:	80 81       	ld	r24, Z
 96a:	28 2f       	mov	r18, r24
 96c:	30 e0       	ldi	r19, 0x00	; 0
 96e:	8b 81       	ldd	r24, Y+3	; 0x03
 970:	88 2f       	mov	r24, r24
 972:	90 e0       	ldi	r25, 0x00	; 0
 974:	a9 01       	movw	r20, r18
 976:	02 c0       	rjmp	.+4      	; 0x97c <MDIO_GetPinVal+0x9e>
 978:	55 95       	asr	r21
 97a:	47 95       	ror	r20
 97c:	8a 95       	dec	r24
 97e:	e2 f7       	brpl	.-8      	; 0x978 <MDIO_GetPinVal+0x9a>
 980:	ca 01       	movw	r24, r20
 982:	81 70       	andi	r24, 0x01	; 1
 984:	89 83       	std	Y+1, r24	; 0x01
 986:	23 c0       	rjmp	.+70     	; 0x9ce <MDIO_GetPinVal+0xf0>
			break;
		case DIO_PORTC:
			local_PinValue = GET_BIT(PINC_REG,A_pinID);
 988:	e3 e3       	ldi	r30, 0x33	; 51
 98a:	f0 e0       	ldi	r31, 0x00	; 0
 98c:	80 81       	ld	r24, Z
 98e:	28 2f       	mov	r18, r24
 990:	30 e0       	ldi	r19, 0x00	; 0
 992:	8b 81       	ldd	r24, Y+3	; 0x03
 994:	88 2f       	mov	r24, r24
 996:	90 e0       	ldi	r25, 0x00	; 0
 998:	a9 01       	movw	r20, r18
 99a:	02 c0       	rjmp	.+4      	; 0x9a0 <MDIO_GetPinVal+0xc2>
 99c:	55 95       	asr	r21
 99e:	47 95       	ror	r20
 9a0:	8a 95       	dec	r24
 9a2:	e2 f7       	brpl	.-8      	; 0x99c <MDIO_GetPinVal+0xbe>
 9a4:	ca 01       	movw	r24, r20
 9a6:	81 70       	andi	r24, 0x01	; 1
 9a8:	89 83       	std	Y+1, r24	; 0x01
 9aa:	11 c0       	rjmp	.+34     	; 0x9ce <MDIO_GetPinVal+0xf0>
			break;
		case DIO_PORTD:
			local_PinValue = GET_BIT(PIND_REG,A_pinID);
 9ac:	e0 e3       	ldi	r30, 0x30	; 48
 9ae:	f0 e0       	ldi	r31, 0x00	; 0
 9b0:	80 81       	ld	r24, Z
 9b2:	28 2f       	mov	r18, r24
 9b4:	30 e0       	ldi	r19, 0x00	; 0
 9b6:	8b 81       	ldd	r24, Y+3	; 0x03
 9b8:	88 2f       	mov	r24, r24
 9ba:	90 e0       	ldi	r25, 0x00	; 0
 9bc:	a9 01       	movw	r20, r18
 9be:	02 c0       	rjmp	.+4      	; 0x9c4 <MDIO_GetPinVal+0xe6>
 9c0:	55 95       	asr	r21
 9c2:	47 95       	ror	r20
 9c4:	8a 95       	dec	r24
 9c6:	e2 f7       	brpl	.-8      	; 0x9c0 <MDIO_GetPinVal+0xe2>
 9c8:	ca 01       	movw	r24, r20
 9ca:	81 70       	andi	r24, 0x01	; 1
 9cc:	89 83       	std	Y+1, r24	; 0x01
	{
		// Do Nothing
	}


	return local_PinValue;
 9ce:	89 81       	ldd	r24, Y+1	; 0x01
}
 9d0:	0f 90       	pop	r0
 9d2:	0f 90       	pop	r0
 9d4:	0f 90       	pop	r0
 9d6:	0f 90       	pop	r0
 9d8:	0f 90       	pop	r0
 9da:	cf 91       	pop	r28
 9dc:	df 91       	pop	r29
 9de:	08 95       	ret

000009e0 <MDIO_vTogglePinVal>:

void MDIO_vTogglePinVal (DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
 9e0:	df 93       	push	r29
 9e2:	cf 93       	push	r28
 9e4:	00 d0       	rcall	.+0      	; 0x9e6 <MDIO_vTogglePinVal+0x6>
 9e6:	00 d0       	rcall	.+0      	; 0x9e8 <MDIO_vTogglePinVal+0x8>
 9e8:	cd b7       	in	r28, 0x3d	; 61
 9ea:	de b7       	in	r29, 0x3e	; 62
 9ec:	89 83       	std	Y+1, r24	; 0x01
 9ee:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) )
 9f0:	89 81       	ldd	r24, Y+1	; 0x01
 9f2:	84 30       	cpi	r24, 0x04	; 4
 9f4:	08 f0       	brcs	.+2      	; 0x9f8 <MDIO_vTogglePinVal+0x18>
 9f6:	72 c0       	rjmp	.+228    	; 0xadc <MDIO_vTogglePinVal+0xfc>
 9f8:	8a 81       	ldd	r24, Y+2	; 0x02
 9fa:	88 30       	cpi	r24, 0x08	; 8
 9fc:	08 f0       	brcs	.+2      	; 0xa00 <MDIO_vTogglePinVal+0x20>
 9fe:	6e c0       	rjmp	.+220    	; 0xadc <MDIO_vTogglePinVal+0xfc>
	{
		switch (A_portID)
 a00:	89 81       	ldd	r24, Y+1	; 0x01
 a02:	28 2f       	mov	r18, r24
 a04:	30 e0       	ldi	r19, 0x00	; 0
 a06:	3c 83       	std	Y+4, r19	; 0x04
 a08:	2b 83       	std	Y+3, r18	; 0x03
 a0a:	8b 81       	ldd	r24, Y+3	; 0x03
 a0c:	9c 81       	ldd	r25, Y+4	; 0x04
 a0e:	81 30       	cpi	r24, 0x01	; 1
 a10:	91 05       	cpc	r25, r1
 a12:	49 f1       	breq	.+82     	; 0xa66 <MDIO_vTogglePinVal+0x86>
 a14:	2b 81       	ldd	r18, Y+3	; 0x03
 a16:	3c 81       	ldd	r19, Y+4	; 0x04
 a18:	22 30       	cpi	r18, 0x02	; 2
 a1a:	31 05       	cpc	r19, r1
 a1c:	2c f4       	brge	.+10     	; 0xa28 <MDIO_vTogglePinVal+0x48>
 a1e:	8b 81       	ldd	r24, Y+3	; 0x03
 a20:	9c 81       	ldd	r25, Y+4	; 0x04
 a22:	00 97       	sbiw	r24, 0x00	; 0
 a24:	61 f0       	breq	.+24     	; 0xa3e <MDIO_vTogglePinVal+0x5e>
 a26:	5a c0       	rjmp	.+180    	; 0xadc <MDIO_vTogglePinVal+0xfc>
 a28:	2b 81       	ldd	r18, Y+3	; 0x03
 a2a:	3c 81       	ldd	r19, Y+4	; 0x04
 a2c:	22 30       	cpi	r18, 0x02	; 2
 a2e:	31 05       	cpc	r19, r1
 a30:	71 f1       	breq	.+92     	; 0xa8e <MDIO_vTogglePinVal+0xae>
 a32:	8b 81       	ldd	r24, Y+3	; 0x03
 a34:	9c 81       	ldd	r25, Y+4	; 0x04
 a36:	83 30       	cpi	r24, 0x03	; 3
 a38:	91 05       	cpc	r25, r1
 a3a:	e9 f1       	breq	.+122    	; 0xab6 <MDIO_vTogglePinVal+0xd6>
 a3c:	4f c0       	rjmp	.+158    	; 0xadc <MDIO_vTogglePinVal+0xfc>
		{
		case DIO_PORTA:
			TOGGLE_BIT(PORTA_REG,A_pinID);
 a3e:	ab e3       	ldi	r26, 0x3B	; 59
 a40:	b0 e0       	ldi	r27, 0x00	; 0
 a42:	eb e3       	ldi	r30, 0x3B	; 59
 a44:	f0 e0       	ldi	r31, 0x00	; 0
 a46:	80 81       	ld	r24, Z
 a48:	48 2f       	mov	r20, r24
 a4a:	8a 81       	ldd	r24, Y+2	; 0x02
 a4c:	28 2f       	mov	r18, r24
 a4e:	30 e0       	ldi	r19, 0x00	; 0
 a50:	81 e0       	ldi	r24, 0x01	; 1
 a52:	90 e0       	ldi	r25, 0x00	; 0
 a54:	02 2e       	mov	r0, r18
 a56:	02 c0       	rjmp	.+4      	; 0xa5c <MDIO_vTogglePinVal+0x7c>
 a58:	88 0f       	add	r24, r24
 a5a:	99 1f       	adc	r25, r25
 a5c:	0a 94       	dec	r0
 a5e:	e2 f7       	brpl	.-8      	; 0xa58 <MDIO_vTogglePinVal+0x78>
 a60:	84 27       	eor	r24, r20
 a62:	8c 93       	st	X, r24
 a64:	3b c0       	rjmp	.+118    	; 0xadc <MDIO_vTogglePinVal+0xfc>
			break;
		case DIO_PORTB:
			TOGGLE_BIT(PORTB_REG,A_pinID);
 a66:	a8 e3       	ldi	r26, 0x38	; 56
 a68:	b0 e0       	ldi	r27, 0x00	; 0
 a6a:	e8 e3       	ldi	r30, 0x38	; 56
 a6c:	f0 e0       	ldi	r31, 0x00	; 0
 a6e:	80 81       	ld	r24, Z
 a70:	48 2f       	mov	r20, r24
 a72:	8a 81       	ldd	r24, Y+2	; 0x02
 a74:	28 2f       	mov	r18, r24
 a76:	30 e0       	ldi	r19, 0x00	; 0
 a78:	81 e0       	ldi	r24, 0x01	; 1
 a7a:	90 e0       	ldi	r25, 0x00	; 0
 a7c:	02 2e       	mov	r0, r18
 a7e:	02 c0       	rjmp	.+4      	; 0xa84 <MDIO_vTogglePinVal+0xa4>
 a80:	88 0f       	add	r24, r24
 a82:	99 1f       	adc	r25, r25
 a84:	0a 94       	dec	r0
 a86:	e2 f7       	brpl	.-8      	; 0xa80 <MDIO_vTogglePinVal+0xa0>
 a88:	84 27       	eor	r24, r20
 a8a:	8c 93       	st	X, r24
 a8c:	27 c0       	rjmp	.+78     	; 0xadc <MDIO_vTogglePinVal+0xfc>
			break;
		case DIO_PORTC:
			TOGGLE_BIT(PORTC_REG,A_pinID);
 a8e:	a5 e3       	ldi	r26, 0x35	; 53
 a90:	b0 e0       	ldi	r27, 0x00	; 0
 a92:	e5 e3       	ldi	r30, 0x35	; 53
 a94:	f0 e0       	ldi	r31, 0x00	; 0
 a96:	80 81       	ld	r24, Z
 a98:	48 2f       	mov	r20, r24
 a9a:	8a 81       	ldd	r24, Y+2	; 0x02
 a9c:	28 2f       	mov	r18, r24
 a9e:	30 e0       	ldi	r19, 0x00	; 0
 aa0:	81 e0       	ldi	r24, 0x01	; 1
 aa2:	90 e0       	ldi	r25, 0x00	; 0
 aa4:	02 2e       	mov	r0, r18
 aa6:	02 c0       	rjmp	.+4      	; 0xaac <MDIO_vTogglePinVal+0xcc>
 aa8:	88 0f       	add	r24, r24
 aaa:	99 1f       	adc	r25, r25
 aac:	0a 94       	dec	r0
 aae:	e2 f7       	brpl	.-8      	; 0xaa8 <MDIO_vTogglePinVal+0xc8>
 ab0:	84 27       	eor	r24, r20
 ab2:	8c 93       	st	X, r24
 ab4:	13 c0       	rjmp	.+38     	; 0xadc <MDIO_vTogglePinVal+0xfc>
			break;
		case DIO_PORTD:
			TOGGLE_BIT(PORTD_REG,A_pinID);
 ab6:	a2 e3       	ldi	r26, 0x32	; 50
 ab8:	b0 e0       	ldi	r27, 0x00	; 0
 aba:	e2 e3       	ldi	r30, 0x32	; 50
 abc:	f0 e0       	ldi	r31, 0x00	; 0
 abe:	80 81       	ld	r24, Z
 ac0:	48 2f       	mov	r20, r24
 ac2:	8a 81       	ldd	r24, Y+2	; 0x02
 ac4:	28 2f       	mov	r18, r24
 ac6:	30 e0       	ldi	r19, 0x00	; 0
 ac8:	81 e0       	ldi	r24, 0x01	; 1
 aca:	90 e0       	ldi	r25, 0x00	; 0
 acc:	02 2e       	mov	r0, r18
 ace:	02 c0       	rjmp	.+4      	; 0xad4 <MDIO_vTogglePinVal+0xf4>
 ad0:	88 0f       	add	r24, r24
 ad2:	99 1f       	adc	r25, r25
 ad4:	0a 94       	dec	r0
 ad6:	e2 f7       	brpl	.-8      	; 0xad0 <MDIO_vTogglePinVal+0xf0>
 ad8:	84 27       	eor	r24, r20
 ada:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
 adc:	0f 90       	pop	r0
 ade:	0f 90       	pop	r0
 ae0:	0f 90       	pop	r0
 ae2:	0f 90       	pop	r0
 ae4:	cf 91       	pop	r28
 ae6:	df 91       	pop	r29
 ae8:	08 95       	ret

00000aea <MDIO_vSetPortDir>:


void MDIO_vSetPortDir (DIO_PORT_e A_portID, u8 A_u8PortDirection)
{
 aea:	df 93       	push	r29
 aec:	cf 93       	push	r28
 aee:	00 d0       	rcall	.+0      	; 0xaf0 <MDIO_vSetPortDir+0x6>
 af0:	00 d0       	rcall	.+0      	; 0xaf2 <MDIO_vSetPortDir+0x8>
 af2:	cd b7       	in	r28, 0x3d	; 61
 af4:	de b7       	in	r29, 0x3e	; 62
 af6:	89 83       	std	Y+1, r24	; 0x01
 af8:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) )
 afa:	89 81       	ldd	r24, Y+1	; 0x01
 afc:	84 30       	cpi	r24, 0x04	; 4
 afe:	90 f5       	brcc	.+100    	; 0xb64 <MDIO_vSetPortDir+0x7a>
	{
		switch (A_portID)
 b00:	89 81       	ldd	r24, Y+1	; 0x01
 b02:	28 2f       	mov	r18, r24
 b04:	30 e0       	ldi	r19, 0x00	; 0
 b06:	3c 83       	std	Y+4, r19	; 0x04
 b08:	2b 83       	std	Y+3, r18	; 0x03
 b0a:	8b 81       	ldd	r24, Y+3	; 0x03
 b0c:	9c 81       	ldd	r25, Y+4	; 0x04
 b0e:	81 30       	cpi	r24, 0x01	; 1
 b10:	91 05       	cpc	r25, r1
 b12:	d1 f0       	breq	.+52     	; 0xb48 <MDIO_vSetPortDir+0x5e>
 b14:	2b 81       	ldd	r18, Y+3	; 0x03
 b16:	3c 81       	ldd	r19, Y+4	; 0x04
 b18:	22 30       	cpi	r18, 0x02	; 2
 b1a:	31 05       	cpc	r19, r1
 b1c:	2c f4       	brge	.+10     	; 0xb28 <MDIO_vSetPortDir+0x3e>
 b1e:	8b 81       	ldd	r24, Y+3	; 0x03
 b20:	9c 81       	ldd	r25, Y+4	; 0x04
 b22:	00 97       	sbiw	r24, 0x00	; 0
 b24:	61 f0       	breq	.+24     	; 0xb3e <MDIO_vSetPortDir+0x54>
 b26:	1e c0       	rjmp	.+60     	; 0xb64 <MDIO_vSetPortDir+0x7a>
 b28:	2b 81       	ldd	r18, Y+3	; 0x03
 b2a:	3c 81       	ldd	r19, Y+4	; 0x04
 b2c:	22 30       	cpi	r18, 0x02	; 2
 b2e:	31 05       	cpc	r19, r1
 b30:	81 f0       	breq	.+32     	; 0xb52 <MDIO_vSetPortDir+0x68>
 b32:	8b 81       	ldd	r24, Y+3	; 0x03
 b34:	9c 81       	ldd	r25, Y+4	; 0x04
 b36:	83 30       	cpi	r24, 0x03	; 3
 b38:	91 05       	cpc	r25, r1
 b3a:	81 f0       	breq	.+32     	; 0xb5c <MDIO_vSetPortDir+0x72>
 b3c:	13 c0       	rjmp	.+38     	; 0xb64 <MDIO_vSetPortDir+0x7a>
		{
		case DIO_PORTA:
			DDRA_REG = A_u8PortDirection;
 b3e:	ea e3       	ldi	r30, 0x3A	; 58
 b40:	f0 e0       	ldi	r31, 0x00	; 0
 b42:	8a 81       	ldd	r24, Y+2	; 0x02
 b44:	80 83       	st	Z, r24
 b46:	0e c0       	rjmp	.+28     	; 0xb64 <MDIO_vSetPortDir+0x7a>
			break;
		case DIO_PORTB:
			DDRB_REG = A_u8PortDirection;
 b48:	e7 e3       	ldi	r30, 0x37	; 55
 b4a:	f0 e0       	ldi	r31, 0x00	; 0
 b4c:	8a 81       	ldd	r24, Y+2	; 0x02
 b4e:	80 83       	st	Z, r24
 b50:	09 c0       	rjmp	.+18     	; 0xb64 <MDIO_vSetPortDir+0x7a>
			break;
		case DIO_PORTC:
			DDRC_REG = A_u8PortDirection;
 b52:	e4 e3       	ldi	r30, 0x34	; 52
 b54:	f0 e0       	ldi	r31, 0x00	; 0
 b56:	8a 81       	ldd	r24, Y+2	; 0x02
 b58:	80 83       	st	Z, r24
 b5a:	04 c0       	rjmp	.+8      	; 0xb64 <MDIO_vSetPortDir+0x7a>
			break;
		case DIO_PORTD:
			DDRD_REG = A_u8PortDirection;
 b5c:	e1 e3       	ldi	r30, 0x31	; 49
 b5e:	f0 e0       	ldi	r31, 0x00	; 0
 b60:	8a 81       	ldd	r24, Y+2	; 0x02
 b62:	80 83       	st	Z, r24
	}
	else
	{
		// Do Nothing
	}
}
 b64:	0f 90       	pop	r0
 b66:	0f 90       	pop	r0
 b68:	0f 90       	pop	r0
 b6a:	0f 90       	pop	r0
 b6c:	cf 91       	pop	r28
 b6e:	df 91       	pop	r29
 b70:	08 95       	ret

00000b72 <MDIO_vSetPortVal>:

void MDIO_vSetPortVal (DIO_PORT_e A_portID, u8 A_u8PortValue)
{
 b72:	df 93       	push	r29
 b74:	cf 93       	push	r28
 b76:	00 d0       	rcall	.+0      	; 0xb78 <MDIO_vSetPortVal+0x6>
 b78:	00 d0       	rcall	.+0      	; 0xb7a <MDIO_vSetPortVal+0x8>
 b7a:	cd b7       	in	r28, 0x3d	; 61
 b7c:	de b7       	in	r29, 0x3e	; 62
 b7e:	89 83       	std	Y+1, r24	; 0x01
 b80:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) )
 b82:	89 81       	ldd	r24, Y+1	; 0x01
 b84:	84 30       	cpi	r24, 0x04	; 4
 b86:	90 f5       	brcc	.+100    	; 0xbec <MDIO_vSetPortVal+0x7a>
	{
		switch (A_portID)
 b88:	89 81       	ldd	r24, Y+1	; 0x01
 b8a:	28 2f       	mov	r18, r24
 b8c:	30 e0       	ldi	r19, 0x00	; 0
 b8e:	3c 83       	std	Y+4, r19	; 0x04
 b90:	2b 83       	std	Y+3, r18	; 0x03
 b92:	8b 81       	ldd	r24, Y+3	; 0x03
 b94:	9c 81       	ldd	r25, Y+4	; 0x04
 b96:	81 30       	cpi	r24, 0x01	; 1
 b98:	91 05       	cpc	r25, r1
 b9a:	d1 f0       	breq	.+52     	; 0xbd0 <MDIO_vSetPortVal+0x5e>
 b9c:	2b 81       	ldd	r18, Y+3	; 0x03
 b9e:	3c 81       	ldd	r19, Y+4	; 0x04
 ba0:	22 30       	cpi	r18, 0x02	; 2
 ba2:	31 05       	cpc	r19, r1
 ba4:	2c f4       	brge	.+10     	; 0xbb0 <MDIO_vSetPortVal+0x3e>
 ba6:	8b 81       	ldd	r24, Y+3	; 0x03
 ba8:	9c 81       	ldd	r25, Y+4	; 0x04
 baa:	00 97       	sbiw	r24, 0x00	; 0
 bac:	61 f0       	breq	.+24     	; 0xbc6 <MDIO_vSetPortVal+0x54>
 bae:	1e c0       	rjmp	.+60     	; 0xbec <MDIO_vSetPortVal+0x7a>
 bb0:	2b 81       	ldd	r18, Y+3	; 0x03
 bb2:	3c 81       	ldd	r19, Y+4	; 0x04
 bb4:	22 30       	cpi	r18, 0x02	; 2
 bb6:	31 05       	cpc	r19, r1
 bb8:	81 f0       	breq	.+32     	; 0xbda <MDIO_vSetPortVal+0x68>
 bba:	8b 81       	ldd	r24, Y+3	; 0x03
 bbc:	9c 81       	ldd	r25, Y+4	; 0x04
 bbe:	83 30       	cpi	r24, 0x03	; 3
 bc0:	91 05       	cpc	r25, r1
 bc2:	81 f0       	breq	.+32     	; 0xbe4 <MDIO_vSetPortVal+0x72>
 bc4:	13 c0       	rjmp	.+38     	; 0xbec <MDIO_vSetPortVal+0x7a>
		{
		case DIO_PORTA:
			PORTA_REG = A_u8PortValue;
 bc6:	eb e3       	ldi	r30, 0x3B	; 59
 bc8:	f0 e0       	ldi	r31, 0x00	; 0
 bca:	8a 81       	ldd	r24, Y+2	; 0x02
 bcc:	80 83       	st	Z, r24
 bce:	0e c0       	rjmp	.+28     	; 0xbec <MDIO_vSetPortVal+0x7a>
			break;
		case DIO_PORTB:
			PORTB_REG = A_u8PortValue;
 bd0:	e8 e3       	ldi	r30, 0x38	; 56
 bd2:	f0 e0       	ldi	r31, 0x00	; 0
 bd4:	8a 81       	ldd	r24, Y+2	; 0x02
 bd6:	80 83       	st	Z, r24
 bd8:	09 c0       	rjmp	.+18     	; 0xbec <MDIO_vSetPortVal+0x7a>
			break;
		case DIO_PORTC:
			PORTC_REG = A_u8PortValue;
 bda:	e5 e3       	ldi	r30, 0x35	; 53
 bdc:	f0 e0       	ldi	r31, 0x00	; 0
 bde:	8a 81       	ldd	r24, Y+2	; 0x02
 be0:	80 83       	st	Z, r24
 be2:	04 c0       	rjmp	.+8      	; 0xbec <MDIO_vSetPortVal+0x7a>
			break;
		case DIO_PORTD:
			PORTD_REG = A_u8PortValue;
 be4:	e2 e3       	ldi	r30, 0x32	; 50
 be6:	f0 e0       	ldi	r31, 0x00	; 0
 be8:	8a 81       	ldd	r24, Y+2	; 0x02
 bea:	80 83       	st	Z, r24
	}
	else
	{
		// Do Nothing
	}
}
 bec:	0f 90       	pop	r0
 bee:	0f 90       	pop	r0
 bf0:	0f 90       	pop	r0
 bf2:	0f 90       	pop	r0
 bf4:	cf 91       	pop	r28
 bf6:	df 91       	pop	r29
 bf8:	08 95       	ret

00000bfa <MDIO_vInit>:


void MDIO_vInit()
{
 bfa:	df 93       	push	r29
 bfc:	cf 93       	push	r28
 bfe:	cd b7       	in	r28, 0x3d	; 61
 c00:	de b7       	in	r29, 0x3e	; 62

	DDRA_REG = CONC_BIT(PA7_INITIAL_DIRECTION,PA6_INITIAL_DIRECTION,
 c02:	ea e3       	ldi	r30, 0x3A	; 58
 c04:	f0 e0       	ldi	r31, 0x00	; 0
 c06:	10 82       	st	Z, r1
						PA5_INITIAL_DIRECTION,PA4_INITIAL_DIRECTION,
						PA3_INITIAL_DIRECTION,PA2_INITIAL_DIRECTION,
						PA1_INITIAL_DIRECTION,PA0_INITIAL_DIRECTION);

	DDRB_REG = CONC_BIT(PB7_INITIAL_DIRECTION,PB6_INITIAL_DIRECTION,
 c08:	e7 e3       	ldi	r30, 0x37	; 55
 c0a:	f0 e0       	ldi	r31, 0x00	; 0
 c0c:	10 82       	st	Z, r1
						PB5_INITIAL_DIRECTION,PB4_INITIAL_DIRECTION,
						PB3_INITIAL_DIRECTION,PB2_INITIAL_DIRECTION,
						PB1_INITIAL_DIRECTION,PB0_INITIAL_DIRECTION);

	DDRC_REG = CONC_BIT(PC7_INITIAL_DIRECTION,PC6_INITIAL_DIRECTION,
 c0e:	e4 e3       	ldi	r30, 0x34	; 52
 c10:	f0 e0       	ldi	r31, 0x00	; 0
 c12:	87 e0       	ldi	r24, 0x07	; 7
 c14:	80 83       	st	Z, r24
						PC5_INITIAL_DIRECTION,PC4_INITIAL_DIRECTION,
						PC3_INITIAL_DIRECTION,PC2_INITIAL_DIRECTION,
						PC1_INITIAL_DIRECTION,PC0_INITIAL_DIRECTION);

	DDRD_REG = CONC_BIT(PD7_INITIAL_DIRECTION,PD6_INITIAL_DIRECTION,
 c16:	e1 e3       	ldi	r30, 0x31	; 49
 c18:	f0 e0       	ldi	r31, 0x00	; 0
 c1a:	8f ef       	ldi	r24, 0xFF	; 255
 c1c:	80 83       	st	Z, r24
						PD3_INITIAL_DIRECTION,PD2_INITIAL_DIRECTION,
						PD1_INITIAL_DIRECTION,PD0_INITIAL_DIRECTION);

	/**********************************************************************/

	PORTA_REG = CONC_BIT(PA7_INITIAL_VALUE,PA6_INITIAL_VALUE,
 c1e:	eb e3       	ldi	r30, 0x3B	; 59
 c20:	f0 e0       	ldi	r31, 0x00	; 0
 c22:	10 82       	st	Z, r1
						 PA5_INITIAL_VALUE,PA4_INITIAL_VALUE,
						 PA3_INITIAL_VALUE,PA2_INITIAL_VALUE,
						 PA1_INITIAL_VALUE,PA0_INITIAL_VALUE);

	PORTB_REG = CONC_BIT(PB7_INITIAL_VALUE,PB6_INITIAL_VALUE,
 c24:	e8 e3       	ldi	r30, 0x38	; 56
 c26:	f0 e0       	ldi	r31, 0x00	; 0
 c28:	84 e0       	ldi	r24, 0x04	; 4
 c2a:	80 83       	st	Z, r24
						 PB5_INITIAL_VALUE,PB4_INITIAL_VALUE,
						 PB3_INITIAL_VALUE,PB2_INITIAL_VALUE,
						 PB1_INITIAL_VALUE,PB0_INITIAL_VALUE);

	PORTC_REG = CONC_BIT(PC7_INITIAL_VALUE,PC6_INITIAL_VALUE,
 c2c:	e5 e3       	ldi	r30, 0x35	; 53
 c2e:	f0 e0       	ldi	r31, 0x00	; 0
 c30:	10 82       	st	Z, r1
						 PC5_INITIAL_VALUE,PC4_INITIAL_VALUE,
						 PC3_INITIAL_VALUE,PC2_INITIAL_VALUE,
						 PC1_INITIAL_VALUE,PC0_INITIAL_VALUE);

	PORTD_REG = CONC_BIT(PD7_INITIAL_VALUE,PD6_INITIAL_VALUE,
 c32:	e2 e3       	ldi	r30, 0x32	; 50
 c34:	f0 e0       	ldi	r31, 0x00	; 0
 c36:	10 82       	st	Z, r1
						 PD5_INITIAL_VALUE,PD4_INITIAL_VALUE,
						 PD3_INITIAL_VALUE,PD2_INITIAL_VALUE,
						 PD1_INITIAL_VALUE,PD0_INITIAL_VALUE);
}
 c38:	cf 91       	pop	r28
 c3a:	df 91       	pop	r29
 c3c:	08 95       	ret

00000c3e <_exit>:
 c3e:	f8 94       	cli

00000c40 <__stop_program>:
 c40:	ff cf       	rjmp	.-2      	; 0xc40 <__stop_program>
